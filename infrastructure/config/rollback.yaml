# Rollback Configuration for 003 Worker Refactor
# This configuration defines rollback procedures and strategies

# Rollback system configuration
rollback:
  timeout: 300  # 5 minutes
  max_attempts: 3
  delay: 10  # seconds between attempts

# Render-specific rollback configuration
render:
  services:
    - "accessa-api"
    - "accessa-worker"
    - "accessa-monitoring"

# Docker rollback configuration
docker:
  app_services:
    - "api-server"
    - "base-worker"
    - "monitoring"
  previous_image: "accessa:previous"

# Git rollback configuration
git:
  previous_commit: "HEAD~1"  # Default to previous commit
  preserve_untracked: false

# Database rollback configuration
database:
  strategy: "backup"  # "backup" or "migration"
  backup_path: "backups/latest_backup.sql"
  rollback_command: "python scripts/rollback_database.py"

# Monitoring rollback configuration
monitoring:
  alerting_rules: "config/monitoring/alerting_rules.yaml"
  dashboard_config: "config/monitoring/dashboard.yaml"

# Verification configuration
verification:
  health_checks:
    - "database_connectivity"
    - "api_health"
    - "worker_health"

# Rollback scripts
scripts:
  - "scripts/rollback_infrastructure.sh"
  - "scripts/rollback_application.sh"
  - "scripts/rollback_database.sh"

# Rollback triggers
triggers:
  infrastructure_failure:
    - "configuration_validation_failed"
    - "health_check_failed"
    - "service_startup_failed"
  
  application_failure:
    - "deployment_validation_failed"
    - "smoke_test_failed"
    - "performance_degradation"
  
  database_failure:
    - "schema_validation_failed"
    - "connection_failed"
    - "migration_failed"

# Rollback notifications
notifications:
  slack_webhook: "${SLACK_WEBHOOK_URL}"
  email_recipients: ["${ALERT_EMAIL}"]
  pagerduty_service: "${PAGERDUTY_SERVICE_KEY}"
