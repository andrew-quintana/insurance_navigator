# Infrastructure Deployment Configuration for 003 Worker Refactor - Phase 5
# This configuration defines the complete infrastructure deployment with automated
# validation against local environment baseline, preventing the infrastructure
# configuration failures experienced in 002.

# Deployment Environment Configuration
deployment:
  environment: "local"  # local, staging, production
  target: "local"
  backup_before_deploy: true
  validate_after_deploy: true
  rollback_on_failure: true
  max_deployment_time_minutes: 30
  health_check_timeout_seconds: 300

# Infrastructure Components
infrastructure:
  # Database Configuration
  database:
    type: "postgresql"
    host: "localhost"
    port: 54322
    database: "postgres"
    user: "postgres"
    password: "postgres"
    connection_pool_size: 10
    max_connections: 100
    health_check_query: "SELECT 1"
    expected_response_time_ms: 50
    
  # Storage Configuration
  storage:
    type: "supabase_storage"
    host: "localhost"
    port: 5000
    bucket: "documents"
    max_file_size_mb: 100
    allowed_mime_types:
      - "application/pdf"
      - "image/jpeg"
      - "image/png"
      - "text/plain"
    
  # Cache Configuration
  cache:
    type: "redis"
    host: "localhost"
    port: 6379
    database: 0
    max_memory_mb: 512
    eviction_policy: "allkeys-lru"

# Service Definitions
services:
  # API Server
  api_server:
    name: "FastAPI Backend"
    type: "api"
    host: "localhost"
    port: 8000
    health_endpoint: "/health"
    expected_status_code: 200
    max_response_time_ms: 100
    startup_timeout_seconds: 60
    health_check_interval_seconds: 30
    dependencies:
      - "database"
      - "storage"
    
  # Worker Service
  worker_service:
    name: "Document Processing Worker"
    type: "worker"
    host: "localhost"
    port: 8001
    health_endpoint: "/health"
    expected_status_code: 200
    max_response_time_ms: 100
    startup_timeout_seconds: 45
    health_check_interval_seconds: 30
    dependencies:
      - "database"
      - "storage"
      - "cache"
    
  # Supabase Storage
  supabase_storage:
    name: "Supabase Storage"
    type: "storage"
    host: "localhost"
    port: 5000
    health_endpoint: "/health"
    expected_status_code: 200
    max_response_time_ms: 100
    startup_timeout_seconds: 30
    health_check_interval_seconds: 30
    dependencies: []
    
  # Supabase Database
  supabase_database:
    name: "Supabase Database"
    type: "database"
    host: "localhost"
    port: 54322
    health_endpoint: "connection_test"
    expected_status_code: "connected"
    max_response_time_ms: 100
    startup_timeout_seconds: 60
    health_check_interval_seconds: 30
    dependencies: []

# Validation Framework Configuration
validation:
  # Baseline Validation
  baseline:
    enabled: true
    local_environment_path: "docker-compose.yml"
    expected_services:
      - "api_server"
      - "worker_service"
      - "supabase_storage"
      - "supabase_database"
    expected_ports:
      - 8000  # API
      - 8001  # Worker
      - 5000  # Storage
      - 54322 # Database
      - 6379  # Redis
    
  # Health Check Validation
  health_checks:
    enabled: true
    initial_delay_seconds: 10
    max_retries: 3
    retry_interval_seconds: 5
    success_threshold: 1
    failure_threshold: 3
    
  # Performance Validation
  performance:
    enabled: true
    response_time_threshold_ms: 1000
    throughput_threshold_rps: 10
    memory_usage_threshold_percent: 80
    cpu_usage_threshold_percent: 80
    disk_usage_threshold_percent: 90
    
  # Security Validation
  security:
    enabled: true
    check_ssl_certificates: false  # Local development
    check_firewall_rules: false    # Local development
    check_authentication: true
    check_authorization: true
    check_data_encryption: false   # Local development

# Monitoring Configuration
monitoring:
  enabled: true
  health_check_interval_seconds: 30
  metrics_collection_interval_seconds: 10
  alert_thresholds:
    response_time_ms: 1000
    error_rate_percent: 5
    consecutive_failures: 3
    memory_usage_percent: 80
    cpu_usage_percent: 80
    disk_usage_percent: 90
  
  # Alert Configuration
  alerts:
    enabled: true
    critical_alert_actions:
      - "log"
      - "console"
      - "rollback_check"
    warning_alert_actions:
      - "log"
      - "console"
    info_alert_actions:
      - "log"
  
  # Metrics Retention
  metrics_retention:
    performance_metrics_hours: 24
    health_checks_hours: 24
    alerts_days: 7
    reports_days: 30

# Rollback Configuration
rollback:
  enabled: true
  automatic_rollback: true
  rollback_triggers:
    health_check_failures: 5
    service_startup_failure: true
    performance_degradation: true
    security_violation: true
  
  # Rollback Actions
  actions:
    - "stop_services"
    - "restore_backup"
    - "restart_services"
    - "validate_restored_state"
  
  # Backup Configuration
  backup:
    enabled: true
    backup_before_deploy: true
    backup_retention_days: 7
    backup_storage_path: "infrastructure/backups"
    backup_components:
      - "database"
      - "configuration"
      - "logs"

# Deployment Scripts
deployment_scripts:
  pre_deployment:
    - "validate_environment"
    - "create_backup"
    - "check_dependencies"
  
  deployment:
    - "deploy_infrastructure"
    - "start_services"
    - "wait_for_startup"
    - "validate_deployment"
  
  post_deployment:
    - "run_health_checks"
    - "collect_metrics"
    - "generate_report"
  
  rollback:
    - "stop_services"
    - "restore_backup"
    - "restart_services"
    - "validate_rollback"

# Environment-Specific Overrides
environments:
  local:
    deployment:
      target: "local"
      backup_before_deploy: false
      rollback_on_failure: true
    
    services:
      api_server:
        host: "localhost"
        port: 8000
      worker_service:
        host: "localhost"
        port: 8001
      supabase_storage:
        host: "localhost"
        port: 5000
      supabase_database:
        host: "localhost"
        port: 54322
    
    validation:
      baseline:
        local_environment_path: "docker-compose.yml"
    
    monitoring:
      health_check_interval_seconds: 15
      metrics_collection_interval_seconds: 5
  
  staging:
    deployment:
      target: "staging"
      backup_before_deploy: true
      rollback_on_failure: true
    
    services:
      api_server:
        host: "staging-api.example.com"
        port: 443
      worker_service:
        host: "staging-worker.example.com"
        port: 443
      supabase_storage:
        host: "staging-storage.example.com"
        port: 443
      supabase_database:
        host: "staging-db.example.com"
        port: 5432
    
    validation:
      security:
        check_ssl_certificates: true
        check_firewall_rules: true
        check_data_encryption: true
    
    monitoring:
      health_check_interval_seconds: 30
      metrics_collection_interval_seconds: 10
  
  production:
    deployment:
      target: "production"
      backup_before_deploy: true
      rollback_on_failure: true
      max_deployment_time_minutes: 60
    
    services:
      api_server:
        host: "api.example.com"
        port: 443
      worker_service:
        host: "worker.example.com"
        port: 443
      supabase_storage:
        host: "storage.example.com"
        port: 443
      supabase_database:
        host: "db.example.com"
        port: 5432
    
    validation:
      security:
        check_ssl_certificates: true
        check_firewall_rules: true
        check_data_encryption: true
    
    monitoring:
      health_check_interval_seconds: 60
      metrics_collection_interval_seconds: 30
      alert_thresholds:
        response_time_ms: 500
        error_rate_percent: 1
        consecutive_failures: 2

# Logging Configuration
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  handlers:
    - "console"
    - "file"
  
  # File Handler Configuration
  file:
    enabled: true
    path: "infrastructure/logs/deployment.log"
    max_size_mb: 100
    backup_count: 5
  
  # Console Handler Configuration
  console:
    enabled: true
    level: "INFO"

# Reporting Configuration
reporting:
  enabled: true
  output_format: "json"
  output_directory: "infrastructure/reports"
  
  # Report Types
  types:
    - "deployment_summary"
    - "health_check_results"
    - "performance_metrics"
    - "validation_results"
    - "rollback_summary"
  
  # Report Retention
  retention:
    deployment_reports_days: 30
    health_reports_days: 7
    performance_reports_days: 30
    validation_reports_days: 30
    rollback_reports_days: 90

# Integration Configuration
integrations:
  # Docker Integration
  docker:
    enabled: true
    compose_file: "docker-compose.yml"
    network_name: "insurance_navigator_network"
    volume_prefix: "insurance_navigator_"
    
  # Supabase Integration
  supabase:
    enabled: true
    project_id: "local"
    api_url: "http://localhost:54321"
    anon_key: "local_anon_key"
    service_role_key: "local_service_role_key"
    
  # External Monitoring
  external_monitoring:
    enabled: false
    endpoints: []
    api_keys: {}

