config:
  target: http://localhost:3001
  phases:
    # Gradual ramp up of authenticated users
    - duration: 60
      arrivalRate: 1
      name: "Auth warmup"
    - duration: 300
      arrivalRate: 2  
      name: "Auth ramp up"
    - duration: 600
      arrivalRate: 5
      name: "Sustained auth load"
    - duration: 120
      arrivalRate: 1
      name: "Auth cool down"

  plugins:
    metrics-by-endpoint:
      useOnlyRequestNames: true

  # Performance thresholds
  ensure:
    maxErrorRate: 1
    maxResponseTime: 2000
    maxLatency: 1000

scenarios:
  # User Registration Load Test
  - name: "User Registration Flow"
    weight: 20
    flow:
      - post:
          url: "/auth/v1/signup"
          json:
            email: "load-test-{{ $randomString() }}@example.com"
            password: "LoadTest123!"
          capture:
            - json: "$.session.access_token"
              as: "authToken"
            - json: "$.user.id"
              as: "userId"
          expect:
            - statusCode: 200
      - think: 2
      
  # User Login Load Test  
  - name: "User Login Flow"
    weight: 30
    flow:
      # First register
      - post:
          url: "/auth/v1/signup"
          json:
            email: "login-test-{{ $randomString() }}@example.com"
            password: "LoginTest123!"
          capture:
            - json: "$.user.email"
              as: "userEmail"
      - think: 1
      # Then login
      - post:
          url: "/auth/v1/token?grant_type=password"
          json:
            email: "{{ userEmail }}"
            password: "LoginTest123!"
          capture:
            - json: "$.access_token"
              as: "authToken"
          expect:
            - statusCode: 200
      - think: 2

  # Authenticated Upload and Chat Flow
  - name: "Authenticated Upload and Chat Flow"  
    weight: 40
    flow:
      # Login first
      - post:
          url: "/auth/v1/token?grant_type=password"
          json:
            email: "test-user@example.com"
            password: "TestPassword123!"
          capture:
            - json: "$.access_token"
              as: "authToken"
            - json: "$.user.id" 
              as: "userId"
      - think: 1
      
      # Upload document
      - post:
          url: "http://localhost:3002/api/upload"
          headers:
            Authorization: "Bearer {{ authToken }}"
          formData:
            file: "@./fixtures/sample-policy.pdf"
          capture:
            - json: "$.documentId"
              as: "documentId"
          expect:
            - statusCode: 200
      - think: 3
      
      # Send chat message
      - post:
          url: "http://localhost:3002/api/chat"
          headers:
            Authorization: "Bearer {{ authToken }}"
          json:
            message: "What is my deductible?"
            conversationId: "load-test-{{ $uuid }}"
            userId: "{{ userId }}"
          expect:
            - statusCode: 200
            - hasProperty: "text"
      - think: 2

  # Session Management Load Test
  - name: "Session Management Flow"
    weight: 10
    flow:
      # Login
      - post:
          url: "/auth/v1/token?grant_type=password"
          json:
            email: "session-test@example.com"
            password: "SessionTest123!"
          capture:
            - json: "$.access_token"
              as: "authToken"
            - json: "$.refresh_token"
              as: "refreshToken"
      - think: 5
      
      # Validate session
      - get:
          url: "/auth/v1/user"
          headers:
            Authorization: "Bearer {{ authToken }}"
          expect:
            - statusCode: 200
      - think: 10
      
      # Refresh token
      - post:
          url: "/auth/v1/token?grant_type=refresh_token"
          json:
            refresh_token: "{{ refreshToken }}"
          capture:
            - json: "$.access_token"
              as: "newAuthToken"
          expect:
            - statusCode: 200
      - think: 2
      
      # Use new token
      - get:
          url: "/auth/v1/user"
          headers:
            Authorization: "Bearer {{ newAuthToken }}"
          expect:
            - statusCode: 200

  # Document Management Load Test
  - name: "Document Management Flow"
    weight: 25
    flow:
      # Login
      - post:
          url: "/auth/v1/token?grant_type=password"
          json:
            email: "doc-test@example.com"
            password: "DocTest123!"
          capture:
            - json: "$.access_token"
              as: "authToken"
            - json: "$.user.id"
              as: "userId"
      - think: 1
      
      # Get documents
      - get:
          url: "http://localhost:3002/api/documents"
          headers:
            Authorization: "Bearer {{ authToken }}"
          expect:
            - statusCode: 200
      - think: 2
      
      # Upload multiple documents
      - post:
          url: "http://localhost:3002/api/upload"
          headers:
            Authorization: "Bearer {{ authToken }}"
          formData:
            file: "@./fixtures/sample-policy.pdf"
          capture:
            - json: "$.documentId"
              as: "doc1Id"
      - think: 1
      
      - post:
          url: "http://localhost:3002/api/upload"
          headers:
            Authorization: "Bearer {{ authToken }}"
          formData:
            file: "@./fixtures/sample-policy.pdf"
          capture:
            - json: "$.documentId"
              as: "doc2Id"
      - think: 1
      
      # Get updated document list
      - get:
          url: "http://localhost:3002/api/documents"
          headers:
            Authorization: "Bearer {{ authToken }}"
          expect:
            - statusCode: 200

  # Chat Interface Load Test
  - name: "Chat Interface Flow"
    weight: 20
    flow:
      # Login
      - post:
          url: "/auth/v1/token?grant_type=password"
          json:
            email: "chat-test@example.com"
            password: "ChatTest123!"
          capture:
            - json: "$.access_token"
              as: "authToken"
            - json: "$.user.id"
              as: "userId"
      - think: 1
      
      # Start conversation
      - post:
          url: "http://localhost:3002/api/chat"
          headers:
            Authorization: "Bearer {{ authToken }}"
          json:
            message: "Hello, I have a question about my insurance policy."
            conversationId: "load-test-conv-{{ $uuid }}"
            userId: "{{ userId }}"
          expect:
            - statusCode: 200
      - think: 2
      
      # Follow-up questions
      - post:
          url: "http://localhost:3002/api/chat"
          headers:
            Authorization: "Bearer {{ authToken }}"
          json:
            message: "What is my annual deductible?"
            conversationId: "load-test-conv-{{ $uuid }}"
            userId: "{{ userId }}"
          expect:
            - statusCode: 200
      - think: 3
      
      - post:
          url: "http://localhost:3002/api/chat"
          headers:
            Authorization: "Bearer {{ authToken }}"
          json:
            message: "Does my policy cover dental work?"
            conversationId: "load-test-conv-{{ $uuid }}"
            userId: "{{ userId }}"
          expect:
            - statusCode: 200
      - think: 2

  # Cross-browser Simulation Load Test
  - name: "Cross-browser Simulation"
    weight: 15
    flow:
      # Simulate different user agents
      - get:
          url: "http://localhost:3000/"
          headers:
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
          expect:
            - statusCode: 200
      - think: 1
      
      - get:
          url: "http://localhost:3000/"
          headers:
            "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.1.1 Safari/605.1.15"
          expect:
            - statusCode: 200
      - think: 1
      
      - get:
          url: "http://localhost:3000/"
          headers:
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0"
          expect:
            - statusCode: 200
      - think: 1

  # Responsive Design Load Test
  - name: "Responsive Design Flow"
    weight: 10
    flow:
      # Test different viewport sizes
      - get:
          url: "http://localhost:3000/"
          headers:
            "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8"
            "Accept-Language": "en-US,en;q=0.5"
            "Accept-Encoding": "gzip, deflate"
            "DNT": "1"
            "Connection": "keep-alive"
            "Upgrade-Insecure-Requests": "1"
          expect:
            - statusCode: 200
      - think: 2
      
      # Test mobile viewport
      - get:
          url: "http://localhost:3000/"
          headers:
            "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8"
            "Accept-Language": "en-US,en;q=0.5"
            "Accept-Encoding": "gzip, deflate"
            "DNT": "1"
            "Connection": "keep-alive"
            "Upgrade-Insecure-Requests": "1"
            "X-Requested-With": "XMLHttpRequest"
          expect:
            - statusCode: 200
      - think: 2
