# Render-Optimized Dockerfile with robust network handling
# This version is specifically designed to handle Render's network issues

FROM python:3.11-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    libpq-dev \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Set working directory
WORKDIR /app

# Copy requirements first for better Docker layer caching
COPY config/python/requirements-prod.txt /tmp/requirements.txt

# Configure pip for better network handling
RUN pip config set global.timeout 300 && \
    pip config set global.retries 5 && \
    pip config set global.retry-delay 2

# Upgrade pip with retry
RUN pip install --upgrade pip --timeout=300 --retries=5

# Install packages in smaller batches to reduce network load
RUN pip install --no-cache-dir --timeout=300 --retries=3 \
    fastapi==0.110.0 \
    uvicorn[standard]==0.27.1 \
    python-multipart==0.0.9 \
    pydantic==2.6.3 \
    pydantic-settings

RUN pip install --no-cache-dir --timeout=300 --retries=3 \
    asyncpg==0.29.0 \
    SQLAlchemy==2.0.28 \
    psycopg2-binary==2.9.9 \
    postgrest

RUN pip install --no-cache-dir --timeout=300 --retries=3 \
    python-jose[cryptography]==3.3.0 \
    bcrypt==4.0.1 \
    passlib[bcrypt]==1.7.4 \
    python-magic \
    pyOpenSSL

RUN pip install --no-cache-dir --timeout=300 --retries=3 \
    aiohttp \
    requests \
    httpx==0.27.0 \
    python-dotenv==1.0.1

RUN pip install --no-cache-dir --timeout=300 --retries=3 \
    langchain==0.1.9 \
    langchain-core==0.1.27 \
    langchain-anthropic==0.1.1 \
    langchain-openai==0.0.8

RUN pip install --no-cache-dir --timeout=300 --retries=3 \
    llama-index-core==0.10.11.post1 \
    llama-index-llms-openai==0.1.6 \
    llama-index-embeddings-openai==0.1.6 \
    llama-index-readers-file==0.1.5

RUN pip install --no-cache-dir --timeout=300 --retries=3 \
    llama-index-readers-llama-parse==0.1.3 \
    llama-index-vector-stores-chroma==0.1.2 \
    supabase \
    anthropic \
    PyPDF2

RUN pip install --no-cache-dir --timeout=300 --retries=3 \
    pgvector \
    sentence-transformers \
    numpy==1.26.4 \
    pytz==2024.1 \
    backoff \
    tenacity

# Copy application code
COPY main.py .
COPY config/ ./config/
COPY core/ ./core/
COPY db/ ./db/
COPY backend/ ./backend/
COPY shared/ ./shared/
COPY utils/ ./utils/

# Create non-root user for security
RUN useradd --create-home --shell /bin/bash app && \
    chown -R app:app /app
USER app

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PORT=8000

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=15s --timeout=5s --start-period=10s --retries=2 \
    CMD curl -f http://localhost:8000/health || exit 1

# Run application
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "1"]
