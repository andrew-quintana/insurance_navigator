*   1d26e57 (refs/stash) WIP on main: 1a0e11f Add debugging tools for Render port configuration issues
|\  
| * efebcec index on main: 1a0e11f Add debugging tools for Render port configuration issues
|/  
* 1a0e11f (HEAD -> staging, origin/staging, origin/main, origin/deployment/cloud-infrastructure, main, deployment/cloud-infrastructure) Add debugging tools for Render port configuration issues
* 3116689 security refactor
* eb03c93 Update security README
* 7ea45d8 Replace 'Accessa' with 'Insurance Navigator' throughout codebase
* 0be3745 environment management 001 infrastructure setup stage phase 3-4 complete and 5+ rescoped
* e830b12 Update service names from old insurance-navigator-* to new api-service-* and upload-worker-*
* 9ae03d8 Sync deployment/cloud-infrastructure with latest backend/workers structure
* fbcce28 environment management 001 infrastructure setup stage phase 3-4 complete and 5+ rescoped
* b162637 environment management 001 infrastructure setup stage phase 2 complete
* 6d25a23 environment management 001 infrastructure setup stage scoped
* 78acff0 environment management 001 phase 1 complete
* 7de7111 environment management 001 scoped
* a0f021b environment management 001 scoped
* c8d5739 Fix FM-018: Resolve generic response generation issue
* 59e148b Complete FM-016 and FM-017 resolution
* 3ee78b6 Fix FM-017: Worker storage access issue
* 5ad6bf4 Fix FM-016: Resolve 'Parsed content is empty' error in webhook processing
* a95b570 Add FM-016: Parsed Content Empty failure mode analysis
* 0b510aa Fix FM-015: Use correct database system in webhook
* 8511a0b Fix FM-015: Add missing httpx import and remove local import
* c1aef4e Fix FM-015: Remove duplicate hashlib import causing UnboundLocalError
* d62f4cc Fix FM-015: Remove incorrect StorageManager import from webhooks.py
* 46ee6cc Enhance webhook processing logging for FM-015 investigation
* aeecbc2 Fix: Add missing os import in webhooks.py
* 58a30a1 Fix FM-014: Mock service fallback masking production issues
* 1bfb21e Fix critical hardcoded development values in production code
* e37240b Fix FM-013: Update db_pool.py to use environment variables instead of hardcoded localhost
* 1443998 Fix ServiceRouter initialization order and FM-012 webhook URL logic
* 9d2a2df Add comprehensive investigation prompt for FM-011 remaining issues
* 29c40af Update FM-011 with partial resolution status
* 9f257d2 Fix worker hardcoded fallback path and improve error handling
* c1c6009 Mark FM-010 as resolved with fix details
* ce9f0ae Fix API service database connection pool failure
* c42707b Update FM-008 to reflect ongoing webhook URL issue
* 55e19bc Add debugging for webhook URL configuration issue
* 40a6951 Fix production webhook URL configuration issue
* a7dd326 Add critical FRACAS analysis for silent production errors
* a0d55ff Add comprehensive worker log analysis and update FRACAS documentation
* 1626084 Update FM-005 FRACAS with resolution details
* ea4d82b Fix worker database connection and LlamaParse error handling
* be9152b fix: complete worker error handling and testing fixes
* c7ba5b0 fix: resolve document_id NameError and fix import paths
* 6d30201 fix: enhance LlamaParse API error handling and retry logic
* 353161e fix: include webhook router in API service
* e2a4878 fix: prevent requests import in production by using conditional import
* 1b43ab4 fix: resolve FM-005 missing requests module in upload pipeline
* 5015937 docs: create FRACAS entry and handoff for API 503 CORS error
* c553726 docs: update FRACAS with uvicorn option fix
* 0392d5b fix: remove invalid uvicorn option --limit-max-requests-jitter
* dd0712c docs: update FRACAS status to reflect resolved issues
* 240a5bc feat: implement local Docker simulation and fix dependency conflicts
* 080f585 Fix httpx dependency conflict in requirements-prod.txt
* 997c793 Fix Docker configuration issues for Render deployments
* 9e51c8e 20250918_mvp_production_deployment 001 scoped
* c676a5c 20250918_mvp_production_deployment 001 scoped
* 98807d4 20250918_mvp_production_deployment 001 scoped
* f278a0d 20250918_mvp_production_deployment 001 scoped
* 54cef4c feat: implement dynamic ngrok URL discovery for runtime configuration
* c345ddb feat: add automated development environment setup scripts
* 665ffc9 feat: implement two-stage output synthesizer for improved response formatting
* 88384f6 feat: Fix embedding generation, RAG functionality, and frontend authentication
* df79be5 FM-032: Document embedding generation failure - batch size exceeds limit
* dfa758c Fix LlamaParse result_type configuration and document content extraction issues
* df5dc05 Complete end-to-end pipeline fixes and webhook solution
* 70bc7f4 Fix hardcoded environment variables for local development
* 811e9d0 Enhanced worker LlamaParse integration COMPLETE + new failure mode FM-029
* a1d4230 Implement proper metadata-only upload flow and fix environment variables
* ea86076 Complete enhanced worker and upload flow fixes
* 674c89b Fix enhanced worker LlamaParse integration rate limiting issues
* ba92e9c CORRECTED ANALYSIS: Root cause is file upload failure, not LlamaParse issues
* be486df Investigation: RAG tool similarity issues and LlamaParse mock service fallback
* 0f60532 Fix upload pipeline webhook storage and path format issues
* 9ae3a73 WIP: Upload pipeline investigation and endpoint consolidation prep
* 4379ced fix: Resolve FM-010 - API Server Memory Exhaustion and Crash
* 864fb93 fix: Resolve FM-009A and FM-009B - Upload Pipeline and Job Processing
* ead0955  adding failure mode tracking capacity
* b654aa6 comprehensive rca validation and debugging - dedupe issues resolved
* f48213a comprehensive rca validation and debugging - dedupe issues resolved
* b5aa516 fix: resolve upload pipeline issues and complete Phase 3 production readiness
* 38bf240 comprehensive rca output refactor 001 phase 3 complete
* 0fe6474 comprehensive rca output refactor 001 phase 2 complete
* a27b263 comprehensive rca output refactor 001 phase 1 complete
* b2c89ea 20250915_comprehensive_refactor scoped
* 074378e 20250915_comprehensive_refactor scoped
* 7b7345e 20250915_comprehensive_refactor scoped
* 5c87de2 rca reintegration scoped
* dcf268c rca rag response failure complete validation scoped
* e2e6ec4 rca api service startup complete and validation scoped
* f24a556 issue with starting up api service to test locally
* eaefe5c Add debug endpoint to check environment variables
* e07b732 Fix Supabase storage URL configuration
* 483a8c8 Fix pgbouncer prepared statement issue
* 2abb62c Fix Supabase storage URL configuration
* 68bac14 feat: add comprehensive Phase 3 validation test with 100% success rate
* 9c4511f fix: resolve worker deployment issues with storage paths and database constraints
* 90d0842 fix: resolve remaining worker deployment issues with logger and database constraints
* 90e2001 fix: resolve worker deployment issues with logger and database schema
* d865167 fix: update worker database query to use correct column names
* aa65716 fix: resolve merge conflicts in enhanced_base_worker.py and update worker Dockerfile
* 5f46ed5 fix: add missing core and utils directories to Dockerfiles
* aea3b55 fix: remove merge conflict markers from main.py
* 220b956 add validation result files
*   11ac2b6 resolve merge conflicts
|\  
| * 17059be Fix critical worker processing errors
| * 7b01f74 Fix StorageManager constructor parameters
| * beb1840 Fix indentation errors in enhanced_base_worker.py
| * 85be406 Fix ServiceRouter initialization and mock storage configuration
| * 3f5db93 Fix worker database initialization issue
| * 4deea30 Final deployment commit: Complete workflow validation and cleanup
| * 149d414 Fix ErrorCategory enum and indentation issues in consolidated worker
| * 401c35c Fix import issues in consolidated worker
| * 7afc198 Consolidate worker implementations and fix user_id bug
| * 33ec3f3 Fix service router to use LlamaParseReal instead of LlamaParseClient
| * 24b7263 Fix LlamaParse API configuration
| * bf71c5b Switch to EnhancedBaseWorkerV2 for real LlamaParse integration
| * 1e4eecf Update RAG similarity threshold to 0.3
| * bf7ef5a Fix duplicate detection to be user-scoped
| * 55e8573 worker updates for using mock llamaparse, error management, and import management
* | f5b2184 feat: bulk refactor validation and upload pipeline fixes
* | f178d2e phase 3 refactor 001 phase 5 complete
* | 9146a68 phase 3 refactor 001 phase 5 complete
* | bdffd01 phase 3 refactor 001 phase 5 rescoped
* | 6351131 phase 3 refactor 001 phase 4 complete
* | ca3446e phase 3 refactor 001 phase 3 complete
* | 64ccf76 phase 3 refactor 001 phase 2 complete
* | 131d6d9 phase 3 refactor 001 phase 1 complete
* | 7ff92d4 phase 3 refactor scoped
* | d28742f phase 3 refactor scoping
|/  
* 4bef3af feat: Complete comprehensive Phase 3 validation with 100% success rate
* 7ba2614 feat: Complete Phase C production cloud backend testing with 100% success rate
* eeb273d fix: Debug and fix Phase C UUID standardization test issues
* ed65914 feat: Implement Phase C UUID Standardization Cloud Integration Testing
* 1f5032a uuid rca refactor phase c complete
* a108a51 uuid rca refactor phase b complete
* e87afc4 uuid rca refactor phase a complete
* 1f84071 uuid rca refactor scoped
* ee58bce uuid rca refactor scoped
* 734b89d agent integration 001 phase 3 general functionality conformance (no errors) but rca001 initiated to investigate no chunks being identified
* 3f66ef9 Add temporary UUID mapping for RAG testing
* d3c6f70 Fix root cause: Generate proper UUIDs instead of minimal_ prefixed IDs
* 62e8781 Fix RAG tool UUID mapping for minimal auth users
* f8ca992 Fix RAG tool user_id extraction from JWT token
* ae67376 Use working local requirements file for production API service
* 3cd9989 Add missing critical dependencies to production requirements
* e88c2b1 Fix LangChain dependency conflicts with flexible version ranges
* 184a17e Align production requirements with working local versions
* 3daf496 Upgrade LangGraph to 0.4.0 to match local working version
* 1fa4507 Fix chat endpoint LangGraph and Anthropic compatibility issues
* 74bc45b Add missing langgraph dependency for chat endpoint
* c0b5c20 Fix Supabase and HTTP client compatibility issues
* 82521ae Fix Supabase HTTP client compatibility issue
* b96da7e CRITICAL FIX: Add psutil to production requirements
* 72cd5ca Fix Next.js build errors
* 2193f55 Fix Vercel frontend deployment
* 0ef4fde Fix Vercel functions pattern
* e1cbc61 Fix Vercel deployment configuration
* 92d9fb9 Fix psutil dependency for production deployment
* b9ea8e1 feat: Update worker service to use production APIs
* 861667d Fix Dockerfile - add missing utils and agents directories
* b527491 Fix Dockerfile pip options - remove invalid retry parameters
*   0b49e8f Merge remote changes and resolve conflicts in main.py
|\  
| * 31164c4 feat: Integrate Patient Navigator agent system with /chat endpoint
| * 76332cb fix: Correct Phase 3 to use Render instead of Kubernetes
| * 6d9efef feat: Complete Phase 3 Cloud Deployment Integration
* | e88b568 Fix Dockerfile network connectivity issues for Render deployment
* | 36604a1 agent integration 001 phase 2 complete
* | 6ab153f agent integration 001 phase 0 complete
* | 50f7ad6 agent integration 001 endpoint integration initial verification
* | 265fa91 agent integration 001 document checker redefined for simple document check
* | 72c9986 agent integration scoping update
* | ffe8841 agent checkpoint
|/  
* 0587374 upload_pipleine workflow testing complete
* 8ab492b Disable document status polling to eliminate 405 errors
* 6af6d38 Fix frontend jobs endpoint - use correct API path
* 0b390a6 Fix frontend document status polling - use correct API endpoint
* ca50e35 Fix frontend upload component - remove fallback to non-existent endpoint
* 4d6e36d (deployment/cloud-infrastructure-agents) Fix frontend upload to use API service instead of non-existent Supabase Edge Function
* 95a27e4 agent integration scoped
* c0da9e5 Fix UUID format issue in upload pipeline API
* 4fa80be Refactor upload endpoints to implement upload pipeline functionality
* 3d7ffb3 Force API service deployment - ensure upload pipeline API is running
*   091d7c7 Merge main branch into deployment/cloud-infrastructure - resolve conflicts
|\  
| * c5348fe Force API service deployment
* | 8d2ee5b Force API service redeploy - trigger deployment
* | b3c5e4b Fix Render configuration to deploy from deployment/cloud-infrastructure branch
|/  
* 7ce60b9 Fix API service deployment - ensure upload pipeline API is running
* ddaabfc Fix worker service to use unique content for testing
* bfd6f5a duplicate testing success
* ded8f1a Fix Phase 3 worker service duplicate status
* beee8a1 Fix Phase 3 worker service duplicate detection
* f5603dc Fix Phase 3 worker service database connection issues
* ddfe50a Update API service Render configuration
* fc50396 Fix worker service pgbouncer prepared statement issue
* 1b70c46 Fix worker service SSL configuration and add more debug logging
* db97d95 Add debug logging to worker service database connection
* 9171845 Fix worker service database connection with SSL configuration
* 3cc7c93 Optimize Phase 3 API deployment: Streamlined Dockerfile and deployment script
* 2f2f9d5 Fix Phase 3 database connection: Add SSL configuration for Supabase
* 3f4b48c worker dockerfile update
* 09e0529 worker dockerfile update
* 43b1d88 worker dockerfile update
* 74e7798 worker dockerfile update
* 10a313f worker dockerfile update
* 6efd8dd upload pipeline deployment phase 2 complete
* 10e3de2 upload pipeline deployment phase 2 complete
* 019f03d upload pipeline deployment phase 2 complete
* 202f50f upload pipeline deployment phase 1 complete
* a95637b upload pipeline deployment scoping
* 3a1da97 upload pipeline deployment scoping
* e0a2619 fix: Add missing /chat endpoint and improve error handling
* 32eeccf trigger: Force new deployment with timestamp
* b97c7c7 fix: Implement direct minimal auth handling in /me endpoint
* a516887 debug: Add debug endpoint to check auth adapter status
* 47964d8 trigger: Force new deployment to fix /me endpoint
* f1a3d43 fix: Resolve import error in user_service.py
* 75d986b fix: Consolidate all auth endpoints to use auth adapter
* 077088c feat: Implement modular authentication system with backend switching
* 6fc6e9b fix: Fix JWT token validation for minimal auth service
* 6b93b54 local testing with production supabase integrated and local calls to deployed render services
* 43d2a1d fix: Update Vercel frontend to use correct API URL
* 4939290 feat: Add authentication validation and improved error handling
* e7b6d3a deployment workflow testing 001 scoped
* b96e27f Implement minimal auth service to bypass all database operations
* 8e6d8fa Remove conflicting simple auth service files
* 3b1ec5a Fix simple auth service to use Supabase client instead of direct DB access
* 61085f1 Implement simple authentication system to bypass email confirmation
* 94c1503 project directory reorganization
* 9f9e8ef cloud deployment validation 001 phase 4 complete
* 490867f Fix Supabase environment variable name mismatch - use SUPABASE_ANON_KEY instead of SUPABASE_KEY
* 5da99f5 Add detailed error logging to register endpoint
* 509713f Fix register endpoint to provide required consent parameters
* d17f3e4 Fix CORS configuration with proper origins and regex pattern
* d8aafb8 Temporarily allow all origins for CORS testing
* 069a2f0 Fix CORS configuration for new Vercel deployment URL
* 0309c4e cloud deployment validation 001 phase 4 complete
* bdd99f3 cloud deployment validation 001 phase 3 complete
* 789dfae cloud deployment validation 001 phase 2 complete
* 9792a5d cloud deployment validation 001 phase 2 complete
* a2a6ac0 cloud deployment validation 001 phase 1 complete
* 577c2f2 Phase 1: Cloud deployment configuration and testing framework
* e4beb3f cloud deployment validation 001 scoped
* 8b9f541 cloud deployment validation 001 scoped
* 7b95b0c (buildout/deployment-integration) mvp frontend integration 001 through phase 4
* cb9b933 mvp frontend integration 001 through phase 4
* 5a0e989 mvp frontend integration 001 through phase 3
* 10919a8 mvp frontend integration 001 scoped
* 5d1bdd9 frontend mvp integration 001 phase 1 complete
* da33b8a mvp frontend integration 001 scoped
* 2649876 mvp frontend integration 001 scoped
* ffc5ac3 mvp frontend integration 001 scoped
* 27dc2e0 mvp frontend integration 001 scoped
* ed016a7 (methodical-project-cleanup) Phase 4: API consolidation - Remove redundant backend/api/
* 695e464 Phase 3 cleanup: Remove deprecated systems and conflicting workflows
* 95f01ac Checkpoint: Phase 1&2 cleanup complete, ready for Phase 3 evaluation
* c672abe Phase 2 cleanup: Remove medium-risk development artifacts
* c261e4e Phase 1 cleanup: Remove low-risk deprecated directories
* 2dc40d7 upload refactor integration 001 complete
* 323030b upload refactor integration 001 mock testing complete
* ef6fd0c end to end flow works but has issues wtih supervisor driving routing, postgresql for rag tool, pydantic validation
* 5a14ad9 Phase 3: Input/Output Processing Workflow Integration - Complete chat interface with input processing, agent workflows, and output processing
* fb2d633 upload refactor integration 001 phase 2 complete but realized input/output processing was never merged so we'll need to bring that in and integrate it with what we have
* ca40f26 upload refactor integration 001 phase 2 mock validation
* 066381e upload refactor integration 001 phase 1 complete
* 6edc0ae upload refactor integration 001 scoped
* fa13db7 upload refactor file testing 001 complete
* 6c518a1 upload refactor file testing 001 phase 6 dummy document upload pipeline verified but with wrong state
* 6fbfe91 phase 6 prompt update
* 8bf01e8 upload refactor file testing 001 phase 6 complete
* f1a854d upload refactor file testing 001 phase 4 complete
* 9514272 upload refactor file testing 001 phase 3.7 complete
* 54145f1 upload refactor file testing 001 phase 3.7 complete
* dd06a0a upload refactor file testing 001 phase 3.5 complete
* dbcb3b5 upload refactor file testing 001 phase 3.5 complete
* f7885ba upload refactor file testing 001 phase 3.4 complete
* 66a4cf4 upload refactor file testing 001 phase 3.3 complete
* 81134c5 prompts and handoff documentation updated
* 6a10d2a upload refactor file testing 001 phase 3.2 complete
* 6e9801c upload refactor file testing 001 phase 3.1 complete and following phases restructured
* e2ae996 upload refactor file testing 001 phase 3.1 complete and following phases restructured
* 140c97f upload refactor file testing 001 phase 2.1 complete and phase 3 rescoped
* e145bf0 (upstream/main) upload refactor file testing 001 phase 2.1 complete and phase 3 rescoped
* ea5fbd9 upload refactor file testing 001 phase 2 complete and 2.1 scoped
* d17559f upload refactor file testing 001 phase 2 complete
* 3353e71 upload refactor file testing 001 scoped
* 0ad9040 upload refactor file testing 001 scoped
* ef41530 updated adjaency_index.md with upload-service
* 070e868 cursor/claude code directive definition
* 020630e (upstream/buildout/upload-refactor, origin/buildout/upload-refactor, buildout/upload-refactor) upload refactor testing validation and debugging 001 phase 8 complete
* bc9e397 upload refactor testing validation and debugging 001 phase 7 complete
* b0acc01 upload refactor testing validation and debugging 001 phase 6 complete
* e6c02c3 upload refactor testing validation and debugging 001 phase 5 complete
* e6d0da1 upload refactor testing validation and debugging 001 phase 4 complete
* 8808507 upload refactor testing validation and debugging 001 phase 3.5 complete
* 3e01589 upload refactor testing validation and debugging 001 phase 3.5 complete
* 21dfe90 upload refactor testing validation and debugging 001 phase 3.5 complete
* 76913e8 upload refactor testing validation and debugging 001 phase 3.5 documentation prepped
* 950795b upload refactor testing validation and debugging 001 phase 3 complete
* 81a3ec6 upload refactor testing validation and debugging 001 phase 3 complete
* 55cf6bd upload refactor testing validation and debugging 001 phase 2 complete and phase 2.5 prepped
* 2998b5b upload refactor testing validation and debugging 001 phase 1 complete
* b652f18 upload refactor testing validation and debugging 001 scoped
* 31ed6c2 upload refactor 003 phase 9 complete
* 2b412e9 upload refactor 003 phase 8 complete and additional phase 9 prep
* c027ddd upload refactor 003 phase 8 complete and additional phase 9 prep
* 0ec575b upload refactor 003 phase 7 complete
* fa82d19 upload refactor 003 phase 6 complete
* 48b0637 upload refactor 003 phase 5 complete
* ee2e93d upload refactor 003 phase 4 complete
* 7dfa013 upload refactor 003 phase 3 complete
* 0081d7b upload refactor 003 phase 3 complete
* daaeecd upload refactor 003 phase 2 complete
* 69a99cb documentation update
* cd7cd64 upload refactor 003 phase 1 complete
* d845ab3 upload refactor 003 preparation with desired file structure
* 4c9d453 003 initial attempt refactor
* 5b9e4e2 prepared for upload refactor 003
* a5e36fd upload refactor 002 post-mortem and 003 prep
* 8bde8ef upload refactor 002 documents scoped
*   ad0b1be Merge upload-refactor-002: reorganize documentation structure and add phase 002 docs
|\  
| * 0b4f6f1 (upstream/upload-refactor-002, origin/upload-refactor-002) upload refactor 002 scoping documentation prepared
* | f511f25 upload refactor 001 phase 2 complete
* | 2995780 upload refactor 001 phase 1 complete
|/  
* 2628df2 update refactor 001 documentation prepared
| * bcc45e2 (upstream/buildout/input-output-workflows, origin/buildout/input-output-workflows, buildout/input-output-workflows) output processing workflow 001 completed
| * eab0b11 output workflow 001 phase 1 complete
| * b4e833a output processing workflow 001 documentation completed
| * 68a6fa1 input processing workflow 001 complete
| * 313611e input processing workflow 001 phase 3 complete
| * 97a6243 input processing workflow 001 phase 2 complete
| * 0142509 input processing workflow 001 phase 1 complete
| * f5e62b4 input processing workflow 001 preparation documentation complete
| * da9c266 input processing workflow 001 preparation documentation complete
| * 26af79d short term memory 001 complete
| * a788a76 short term memory 001 complete
| * 4cf660c debug of phase 4 failure done
| * bc76994 short term memory 001 phase 4 troubleshooting pause for issues starting up the server for end-to-end integration
| * 9f80950 short term memory 001 phase 3 complete and templates updated
| * b443052 short term memory 001 phase 2 complete
| * 060127d short term memory 001 phase 1 complete
| * 1caaf83 prepared documentation for short term memory, input/output workflows, and security agent
| * 1ea4cde chore: update .gitignore to exclude .claude/ and .github/ directories
|/  
* 1605965 (buildout/supabase-serial-edges) supervisor and orchestration 001 completed
* 4705bbf supervisor and orchestration 001 phase 4 completed
* 793ab80 supervisor and orchestration 001 phase 3.5 completed
* 2a761f3 supervisor and orchestration 001 document update, 3.5 preparation, and db refresh + adding a doc
* 2c7c040 supervisor and orchestration 001 phase 3.5 prepared
* d3dc3f6 supervisor and orchestration 001 phase 3.5 prepared
* 46a7758 supervisor 001 implementation phase 3 complete
* f87e925 supervisor 001 implementation phase 2 complete
* 5e9b7e9 supervisor 001 implementation phase 2 complete
* 2d8fe11 supervisor 001 implementation phase 1 complete
* c4e3b33 supervisor 001 implementation documents updated
* e3b7b94 supervisor 001 implementation documents prepared
* 26af5e1  strategy 002 completed
* df1d873 strategy workflow 002 phase 3 implemented
* 807f864 strategy workflow 002 phase 2 complete
* 32860f5 strategy effor 002 phase 1 complete
* cf32aa2 plan 002 scoped
* c64d1cb (upstream/buildout/supabase-serial-edges, origin/buildout/supabase-serial-edges) strategy workflow scoped
* e9ceef5 phase 3 complete
* 4fda2e2 phase 2 complete
* 99720c6 information retrieval agent scoped and initially implemented
* 2b82342 regulatory update phase 2 complete - closes out update
* b2ab3bc completed regulatory documents update phase 1
* 3218b08 prepared the scope for the regulatory upload process
* 8c1ba9a RAG implementation scoping and phase 1 implementation
* eaef7db RAG implementation scoping and phase 1 implementation
* 1f67d71 confirmed to work with 2.5mb document
* 99ffbf4 simplified chunking to leverage markdown output so llm not necessary
* bd98d77 minor tweaks to imports to get back to valid state with small document
* de4aede full pipeline functional with small document but chunking llm step fails to maintain structured output with larger document
* 7432342 all but the test polling works in the pipeline
* 266a29a updated with chunker ability
* a6533ee async pipeline testing conversion
* aa620ff doc-parser success in pipeline
* 094acd1 doc-parser setup
* b8c9af3 supabase initialization and upload-handler preparation and unit testing complete
* 22c8afd (upstream/staging) end of the last attempt - moving to manual impelemntation
* 25a09a1 test(doc-processor): improve test logging and fix status handling
* b42b7cc fix: update health check to use database pool instance correctly
* eec7afd fix: remove custom options from Supabase client creation to resolve headers attribute error
* 364f2e8 perf: optimize Docker build speed with improved caching and reduced context
* a2bc8eb fix: improve database pool management and shutdown handling
* 08af8d9 fix: improve database connection handling with pooling and retry logic
* 3f351a5 fix: increase Render deployment and health check timeouts for service initialization
* eb7768c perf: optimize Docker builds by setting PATH early and using --no-warn-script-location for pip installs
* d2f1764 fix: update langchain-core version to resolve dependency conflicts
* f7fe8b5 fix: pin llama-index and langchain versions to resolve dependency conflicts
* 6768a74 feat: align production requirements with core dependencies
* 40d44fe fix: add missing AI and document processing dependencies to production requirements
* 2a565df fix: add psycopg2-binary to production requirements
* 5664856 fix: add psycopg2-binary to requirements for PostgreSQL support
* 05ff9cc fix: resolve theme provider type error and remove deprecated swcMinify option
* b07ab63 feat: complete production deployment setup with monitoring and edge functions
* 477be87 fix: properly initialize and reuse database pool in user service
* 11962c0 refactor: Consolidate auth schema and simplify role management
* 22e5534 fix: Update user service to handle registration and authentication properly
* 6aa55d3 feat: Implement registration endpoint and align auth schema with frontend expectations
* e6fa22d fix: remove duplicate sections in package.json
* 11b642b refactor: restore and consolidate schema state across environments
* 49d0325 refactor: streamline logging configuration to reduce verbosity
* a99b1b3 fix: use user_id from JWT payload for authentication
* 53c0032 fix: improve user ID validation in upload-handler
* 0356887 fix: improve FormData handling in upload-handler and add Accept header to frontend
* 17a17ac fix: update upload handler to use correct FormData format
* cc64821 fix: update CORS configuration to allow Vercel preview URLs
* c256ab3 Enhanced document processing with retry logic and job validation
* 9a48b59 refactor: streamline document processing flow between Edge Functions
* 1ebe92a fix: move global statement before try block in startup event
* d82eb5d fix: update schema and migrations for document processing
* 2080a70 Update upload-handler to use new schema and job-based processing
* 945a83d Implement job-based document processing pipeline
* cbd5ff2 fix: implement Supabase client singleton to prevent multiple instances
* 5ad2072 fix: update CORS configuration for Edge Functions
* b1630e3 fix: resolve authHeader variable redeclaration
* eeb3818 feat: add comprehensive logging for header validation debugging
* 4b55f59 fix: ensure Authorization header is valid ByteString
* f6fbedd fix: simplify FormData handling and remove custom headers
* 4f9bdca fix: manually construct multipart/form-data with proper boundaries
* e53e9bf fix: simplify LlamaParse upload to match official example
* 5abb984 fix: properly handle binary data in multipart/form-data upload
* 480d3e3 fix: implement custom multipart/form-data upload to bypass header validation
* 4b54737 fix: use custom HttpClient for LlamaParse API calls
* 2b08786 fix: aggressive header validation fix for LlamaParse upload
* 7b2b00a fix: simplify LlamaParse API headers to resolve validation issues
* f6766a9 fix(cors): update regex pattern for shorter hashes and add new preview URL
* fd1f353 feat(cors): add specific Vercel preview URLs to allowed origins
* 8486b5e fix(cors): update Render ALLOWED_ORIGINS to match CORS configuration
* 02b1a66 fix(cors): update configuration to handle all Vercel preview URLs and add Render API
* 26546ad feat(cors): temporarily enable wildcard origin for MVP testing
* 9284c75 fix: update Supabase Edge Function URLs to use functions.supabase.co domain
* b57a588 fix: improve error handling in doc-parser and upload endpoint
* 264bdc2 fix: add proper CORS and method handling to all Edge Functions to prevent 405 errors
* 6e5d54f fix: add missing request parameter to health check and handle root HEAD requests
* e3190af fix: optimize Render configuration and health checks to prevent 502 errors
* 75798f0 fix: optimize Render configuration and remove conflicting CORS headers
* 62e7345 fix: improve CORS handling with better wildcard support and debug logging
* ab91e77 fix: improve CORS handling and Nginx configuration
* c925985 fix: resolve syntax error in main.py
* 4d219be fix: update Render CORS configuration to match backend settings
* 4547e96 fix: implement robust CORS configuration following Supabase best practices
* 4bfaf0c refactor: simplify CORS configuration following Supabase's approach
* 7e878d4 fix: update CORS configuration to follow Supabase best practices and fix preflight issues
* c4efe80 fix: use correct database connection method get_connection()
* e541bca fix: improve duplicate file handling in upload process
* 7841a1a fix: remove realtime functionality in favor of simple polling
* 8ceffe3 fix: improve Supabase realtime configuration and frontend subscription handling
* 88ec2f3 fix: Allow duplicate files in storage service for MVP
* 5dc81d9 fix: Add document record creation to storage service
* 2db4e06 refactor: Simplify storage service for MVP, remove RLS policies
* f47b499 feat: Implement Supabase Storage best practices for uploads and security
* 06169cb feat: Add robust Supabase connection handling with retries and better error reporting
* f84021d feat: Add detailed logging for Supabase configuration loading
* b9c52b0 fix: Convert document_id to string in upload_document response
* 5d1a20f fix: Update upload_document parameters to match StorageService method signature
* 6340f79 fix: Improve document processing pipeline
* 7e05828 refactor: implement memory management and retry logic in Edge Functions
* a74d1c6 fix(storage): update job payload and storage bucket config
* 7a7cb91 fix(storage): remove duplicate job creation, rely on database trigger
* 0082334 fix(storage): create processing job after document upload
* 9cb0013 refactor(cors): simplify CORS configuration with regex pattern for Vercel preview URLs
* f8e755e fix(startup): move global statement to beginning of startup_event function
* ff11ce5 feat(cors): update Render CORS headers for new Vercel preview URL
* 59676f4 feat(cors): add new Vercel preview URL to allowed origins
* cba08d7 feat(doc-parser): integrate LlamaParse for PDF text extraction
* c9d10db fix: use correct bucket name for document uploads
* 489efcd fix: Add comprehensive logging and fix JSON parsing\n\n- Add detailed logging to job-processor function\n- Fix JSON parsing in vector-processor\n- Move vector processing to dedicated function\n- Add error handling and logging
* 44b693b fix: Update upload_document_backend endpoint to use correct parameter name
* 4b39bc0 refactor: Implement Edge Function-based document processing
* 2f3d154 fix: Complete RCA fixes for document processing pipeline
* 008ec6a fix: Update vector data type handling in document processing
* b17364b fix: Improve WebSocket connection reliability and error handling
* 591a1ed feat: Implement document processing pipeline
* 47bc029 fix: handle Supabase storage upload response correctly
* f7dc9e5 fix: use string value for upsert header in storage upload
* 5ce831a refactor: simplify document upload for MVP, add TODOs for duplicate handling
* faf4748 fix: handle duplicate documents in storage service
* 88e357b fix: update Supabase storage upload response handling
* 81616e8 refactor: standardize LlamaParse API key environment variable name to LLAMA_CLOUD_API_KEY
* 80eaac8 feat: add detailed logging for text extraction
* fc76b70 feat: add document_vectors table for semantic search
* 41534f4 fix: remove unused service declarations causing deployment errors
* d785f62 refactor: simplify document processing to remove complex job queue system
* 7d86066 fix: Improve CORS preflight handling and add regex pattern for Vercel preview URLs
* eb6b299 fix: Update storage service method call from upload_file to upload_document
* ba10057 fix: Update CORS configuration to allow new Vercel preview URL
* 26208b0 fix: Improve cold start handling and add request logging
* ef81542 fix: Align CORS configuration between Render and FastAPI
* 7624c0d fix: Simplify CORS configuration and remove redundant handlers
* d7eef37 fix: Update login preflight handler to properly handle CORS requests
* 76c952b feat: Add detailed CORS and login endpoint logging for debugging
* 7f43a04 fix: Update CORS configuration and login preflight handler to properly handle credentials and headers
* f4b843d fix: Update CORS configuration and login endpoint to properly handle preflight requests
* 5cfd29c fix: simplify CORS configuration to use FastAPI middleware only
* b74ba71 fix: simplify CORS configuration for MVP, remove custom middleware to avoid conflicts
* a9913fa fix: update document upload endpoint to match DocumentProcessingService parameters
* e433276 fix: update VectorService to accept api_key and pool parameters in constructor
* 89f80a8 fix: update CORS configuration to handle Vercel preview URLs
* b3bafc9 fix: encryption service implementation and Supabase RPC functions
* 5fc0501 fix: Add api_key and pool parameters to VectorService initialization
* 7b192fb fix: Improve file upload handling and add detailed logging
* ee4b87b feat: Enhance upload debug logging to catch early failures
* d0ac423 fix: Update CORS regex to allow all Vercel preview URLs
* 36163c8 feat: Add detailed debug logging to document upload component
* 132b198 feat: add /me endpoint and fix bcrypt version
* b8fa1ee fix: authentication response format and bcrypt version
* 0ea8a52 fix: simplify CORS handling and add nginx proxy
* a29ba5e feat: add free tier optimized configurations
* 8980913 feat: add Vercel preview URL pattern to allowed origins
* 481193b fix: CORS preflight handling and database connection
* 23fbd33 fix: add proper health check, document upload endpoint, and WebSocket notifications
* 98b714b fix: add backoff package and force pip cache invalidation
* 4248bff fix: restore full FastAPI app with proper imports and initialization
* f3b197c fix: correct indentation in get_document_status function
* d41b440 fix: move Dockerfile to root for Render deployment
* c141c33 fix: move render.yaml to root for Render deployment
* c5430c2 refactor: cleanup old files and update Edge Functions for document processing
* 7470cff EMERGENCY FIX: Large document processing stability
* a37d78d MVP PRODUCTION READINESS FIXES
* 5ad4827 Fix: Resolve stack overflow for large PDF files in LlamaParse integration
* 57c5cc2 Fix: Replace mock content with real LlamaParse integration in doc-parser
* 44f1e74 Simplify upload success message - remove document ID and processing details
* ec9113c Fix regulatory upload endpoint syntax error - correct edge function parameter indentation
* e59c82f Fix document type for user uploads - should be 'user' not 'regulatory'
* 63653f2 Fix upload logic bug - raise HTTPException only when upload fails, not always
* 0964f3e Fix indentation errors in main.py that were causing deployment failures
* 8feeda8 Fix upload error handling and doc-parser table routing
* f690d0e CRITICAL FIX: Supabase storage upload response handling
* f10018e Fix indentation errors in main.py
* eadffb5 Fix upload pipeline: report failures, fix doc-parser vector processing, improve progress bar timing
* 0742d94 feat: Create smart progress bar without time displays - Remove elapsed and remaining time counters - Progress bar moves smoothly from 5% to 85% over time - Accelerates to 100% when upload completes - 1.5s animation delay for polished completion effect
* af84245 feat: Improve upload progress bar to show remaining time countdown
* 33b9845 fix: Resolve error_msg scope issue with robust upload response handling
* 03f451d feat: Replace complex upload UI with simple time-based progress
* 1bebfd7 fix: Resolve IndentationError in main.py - fix all try/if block indentation issues
* 2294fd7 fix: Simplify document status endpoints with direct DB queries
* ca9d1e4 fix: Improve WebSocket progress tracking with better error handling and faster fallback
* b543955 Fix edge function database schema compatibility
* ba873d1 Fix critical upload pipeline issues
* f5afb8e Deploy edge function fixes and comprehensive pipeline validation
* aec1727 Fix critical upload pipeline issues
* 182ac74 Fix documents table INSERT - add missing status parameter (was missing 13th parameter)
* 5d407c2 Fix regulatory_documents INSERT - provide all 12 required parameters including content_hash, priority_score, search_metadata
* 77f581b Fix regulatory_documents INSERT statement - correct column count and order
* 2719803 Fix regulatory_documents table schema mismatch - use document_id instead of id
* fdd713a 🔧 Fix Regulatory Upload Endpoint - Use Direct Backend Approach
* 539ad29 🔧 Fix Frontend 400 Errors - Add Missing Document Endpoints
* c2e2c4a 🔧 Critical Document Pipeline Bug Fixes & Performance Optimizations
* 3eec58f 🛠️ Fix doc-parser bucket mismatch
* e761a9f 🎨 Enhance frontend upload UX with better progress tracking and error handling
* bed1097 🔧 BUCKET FIX: Switch to raw_documents bucket
* b4f8994 🚨 HOTFIX: Remove processing_started_at column reference
* c2455b4 ⚡ Fix Docker build hanging on chown operation
* e8bf9d7 🔧 Fix Docker user context issue for uvicorn
* 62507e9 🚀 Optimize Render startup time - reduce from 8min to 2-3min
* e913f8f 🚨 CRITICAL DATABASE FIX: Column name correction
* 4d07c5c 🚨 CRITICAL FIX: Backend upload & frontend WebSocket issues
* 63943eb REFACTOR: Backend-first upload architecture
* 2ae1709 Fix document upload pipeline - add uploadUrl field validation and better error handling
* 7d35a67 Fix document upload pipeline: edge function orchestration, WebSocket connections, and Render timeouts
* 85774e8 🔧 Fix edge function apikey header
* f757e88 🔧 Fix document upload pipeline authentication and regulatory upload
* 81709cc Fix EncryptionServiceFactory method call - Change get_service() to create_service('mock') - Resolves policy basics extraction error
* 119d2de v2.0.1 - Force complete rebuild for storage service fixes - Update version to clear any cache - Ensure upload_policy_document fixes are active
* d8f2192 Force deployment refresh - fix storage service caching issue - Add deployment timestamp to force fresh build - Ensure upload_policy_document fixes are deployed
* 157b3a0 Add comprehensive deployment testing summary - 71.4% success rate with core infrastructure working
* 9b4210b Remove duplicate chat endpoint - fix route conflict
* 512fe7c Create ultra-simplified chat endpoint for testing - bypass all dependencies
* dc1cfae Simplify chat endpoint for testing - bypass hybrid search temporarily
* 13430bd Fix chat endpoint method call - use search_hybrid instead of hybrid_search
* df0b9f1 Fix critical API errors: storage method calls and chat syntax - Fix StorageService missing upload_policy_document method by using upload_document - Fix chat endpoint syntax error with broken if/else structure - Both issues causing 500 errors in production deployment
* 4e9d1ac fix: health check SECRET_KEY error
* 46fe42f fix: health check undefined variable error
* 2217c35 feat: Add comprehensive deployment documentation and testing infrastructure - Added DEPLOYMENT_SUCCESS_REPORT.md with complete deployment status - Added regulatory processing documentation and test scripts - Included Edge Functions deployment guides and verification tools - Added comprehensive testing suite for end-to-end validation - Updated main.py with latest fixes and improvements - Ready for production deployment with full documentation
* f11dd36 fix: Correct PDF extraction function syntax error - fix try-except block indentation
* 6a84b35 feat: Add unified API for regulatory document processing with vector generation
* 697ed54 feat: Add unified API for regulatory document processing with vector generation
* 48fe3a0 fix: Add kernel reload and diagnostics for system prompt functionality - Added importlib.reload() to force refresh of updated code in notebook - Added method signature inspection for debugging - Added try/catch with fallback to legacy prompt approach - Added clear instructions to restart kernel if TypeError occurs - Ensures users can access latest system prompt features
* 5e895f6 feat: Update notebook with system prompt examples - Updated all cells to demonstrate new system + user prompt structure - Added comprehensive prompt style comparison (system+user, legacy, mixed) - Enhanced hot-swapping examples to show separate system/user prompt editing - Maintained backward compatibility examples - All examples tested with real Anthropic API calls
* c05d500 feat: Add system prompt support to prototyping studio - Added separate system_prompt parameter to AgentPrototype class - Updated quick_agent method to support system_prompt and user_prompt - Enhanced ConfigPanel with edit_system_prompt and edit_user_prompt methods - Maintains backward compatibility with existing prompt parameter - Supports flexible prompt configurations (legacy, system+user, mixed) - Real API testing confirms system/user message structure works with Claude - Updated factory functions and configuration display methods
* c806b0f fix: Correct import paths and __init__.py files for prototyping studio - Fixed project root path detection in notebook cells - Added proper __init__.py files for package imports - Corrected function names in sandbox package exports - Import system now works correctly from notebook directory
* 55f9ab6 feat: Add Agent/Workflow Prototyping Studio with Anthropic integration - Complete prototyping environment for rapid agent and workflow development - Auto-discovery of existing agents (7) and models (17) from codebase - Full Anthropic Claude integration with real API testing - Hot-swappable configurations for models, prompts, and parameters - Multi-agent workflow engine with sequential and conditional execution - Interactive Jupyter notebook with validated examples - Healthcare-specific consultation workflow templates - Comprehensive testing framework with mock/real mode toggle - Zero production impact - session-only prototyping environment - All cells tested and working with real Anthropic models
* b18224a Fix syntax errors in db_pool.py: correct try block indentation
* f12e8d4 Fix syntax errors: add missing try-except blocks and fix indentation
* 3ad0b22 Fix Edge Function authentication - use service role key instead of user JWT
* 385e4c4 Fix syntax errors: orphaned else statement and indentation issues
* af8cbd0 Fix Edge Function request format - send JSON payload instead of form data
* b5c9791 Fix Edge Function authentication to support backend JWT tokens
* 19d528c Fix Edge Function authentication - use user JWT token instead of service key
* afb48e0 Force restart to clear cached database connections
* 0a4fd07 Add graph/sandbox to gitignore
* f157e57 🚨 HOTFIX: Fix critical syntax error in db_pool.py line 86 - Fixed missing indentation for asyncpg.create_pool inside try block - Resolves 'expected except or finally block' deployment error - Ensures proper error handling for database pool creation
* 48ec05b Fix syntax errors and ensure correct INSERT statements without storage columns
* 5f59456 Add comprehensive failure mode analysis and validation tools
* 7135819 Add V2.0.3 migration to restore processing_jobs table
* a31a46c Fix V2.0.2 migration audit_logs issue - Handle audit_logs resource_type constraint properly - Use conditional logic to check column existence - Ensure compatibility with different database schemas
* 78c7a34 Fix document upload: Add file_path and missing storage columns - Fix NULL file_path error in upload-document-backend endpoint - Add file_path generation for both upload endpoints - Create V2.0.2 migration for missing storage columns - Add storage_backend, bucket_name, and other required columns - Update INSERT statements to include all required fields
* 085f9b3 Add database migration V2.0.1 for documents table compatibility
* d2cd36a Fix database table references after migration
* 3cb6950 🚨 HOTFIX: Fix critical syntax error in db_pool.py line 86 - Fixed missing indentation for asyncpg.create_pool inside try block - Resolves 'expected except or finally block' deployment error - Ensures proper error handling for database pool creation
* cff4e80 🔧 Fix upload system: SBERT numpy arrays + Edge Functions integration - Fix SentenceTransformer mock models to return numpy arrays (not lists) - Resolves 'list' object has no attribute 'tolist' error - Add /upload-document-backend endpoint for Edge Functions pipeline - Prioritize LlamaParse via Supabase Edge Functions over PyPDF2 - Frontend immediate completion + background processing notifications
* 118446c ✨ Implement LlamaParse integration for PDF processing - Replace PyPDF2 with LlamaParse as primary method, add environment detection, fallback support, integrates with Supabase Edge Functions
* 2dd7672 🐛 HOTFIX: Re-enable PyPDF2 import for document upload - Fixes 'NameError: name PyPDF2 is not defined' causing upload failures in production
* f05f8ce 🚀 Complete database refactoring implementation - Phase 1 & 3 complete. 65% complexity reduction (22+ → 8 tables), <50ms policy lookups, HIPAA compliant, ready for deployment
* 0085b6e 🔧 Fix: Resolve FastAPI syntax errors and indentation issues - Fixed indentation errors in CustomCORSMiddleware dispatch method - Restored working main.py from backup with proper syntax - Resolved line 93 indentation issue preventing Render deployment - FastAPI server now starts successfully locally - Ready for Phase 2 authentication testing
* 6428885 🎯 Database Refactoring Complete & V0.2.0 Consolidation - ✅ 65% complexity reduction (27+ → 13 tables) ✅ 100% data preservation ✅ HIPAA compliance ✅ Performance optimized - V0.2.0 consolidated migration ready for deployment
* a4e07a8 Complete file reorganization with comprehensive testing - All systems verified working, document processing operational, backward compatibility maintained
* c393dc2 Fix syntax errors in main.py after file reorganization
* 2edba9d Major file organization: move config files to config/, deployment docs to docs/deployment/, deployment scripts to scripts/deployment/, notebooks to notebooks/, create symlinks for backward compatibility, add comprehensive documentation
* 0617d3d Organize document processing files: move scripts to appropriate directories, update references, add documentation, clean up temporary files
* e868a79 Refactor Supabase cron/queue setup: robust error handling, deduplication, and permission-safe cron management
* 71692e2 Fix storage service method call: use upload_user_document_with_vectors instead of non-existent upload_file
* 3a8e840 Add debug endpoints for job processing and document status
* 2249145 Force redeploy: ensure duplicate file handling is active in production
* 94917fe (upstream/buildout/mvp-integration, origin/buildout/mvp-integration, buildout/mvp-integration) Add temporary cleanup endpoint for duplicate file testing
* a3a3188 Update deployment info and force redeploy for duplicate file fix
* 95adab1 Fix duplicate file upload: handle file hash conflicts gracefully with deduplication
* 499cee8 Add database connection retry logic, timeouts, and debugging logs for startup issues
* e41286b Fix startup hanging: lazy load AgentOrchestrator, improve error handling, use PORT env var
* e5a1c63 🔧 Fix bucket name - Use existing 'documents' bucket instead of non-existent 'user-documents' - Prevents storage upload failures
* eb1dbaa 🔧 CRITICAL: Fix processing_jobs column names - Change scheduled_for -> scheduled_at (matches table schema) - Change metadata -> payload (matches table schema) - Prevents INSERT failures on job creation
* 42f7cd7 🔧 Fix file storage architecture - Use Supabase Storage instead of non-existent file_content column - Generate storage_path for proper file management - Include storage_path and file_hash in job metadata - Cleanup on storage failure with proper error handling
* 49820cf 🔧 Fix file_hash constraint - Add missing file_hash generation in upload endpoint - Generate SHA256 hash for file deduplication and integrity - Include file_hash in documents INSERT query - Resolves NOT NULL constraint violation
* c177fda 📊 Add comprehensive job queue monitoring scripts - Real-time monitoring with watch_jobs.sh - Detailed status reporting with job_queue_monitor.sh - API endpoint for web-based monitoring
* 246e1cd 🚀 Force Render deployment - database pool fix
* bdf95ac 🔧 Fix database pool API usage - use get_connection() instead of acquire()
* cf6a06a 🚀 ELIMINATE ALL POLLING - Pure Real-time Solution - You were absolutely right - no polling needed! - Uses ONLY Supabase real-time subscriptions - Backend updates database, frontend receives updates automatically - Zero API polling, zero 405 errors, zero spam - Proper event-driven architecture as intended
* 3d6cca5 🔧 Smart Progress Tracking - Eliminate Aggressive Polling - Prioritizes real-time Supabase subscriptions (no polling needed) - Limits API polling to 10 attempts max to prevent spam - Graceful fallback when endpoints not deployed - Reduces 405 error spam significantly
* 05ecf72 🔧 Add Fallback for Backend Deployment Delay - Graceful fallback to existing upload-policy endpoint when new backend endpoint not deployed yet - Handles different response formats from old vs new endpoints - Ensures system works during deployment transitions
* 0414e5f 📋 Complete Backend-Driven Architecture Documentation - Comprehensive analysis of frontend dependency elimination - Technical details of job queue integration - Real status tracking without timeout assumptions - Production-ready backend processing system
* 4e3e03b 🚀 Complete Backend-Driven Upload System - ELIMINATES Frontend Dependency - Backend handles all file upload and processing via job queue - Frontend only polls for status updates (no more Edge Functions) - Processing continues even if user closes browser - No more timeout assumptions - true backend processing - Bulletproof reliability with proper job queue integration
* 17b25a4 📋 Complete 406 Error Fix Documentation - Comprehensive analysis of RLS polling issues and timeout solution - Technical details of frontend hanging at 20% resolution - Production-ready fix with zero maintenance requirements
* d214422 🔧 Improved Frontend Progress Tracking - Remove Problematic Polling - Eliminates 406 RLS errors by removing direct Supabase table polling - Adds intelligent 30-second timeout mechanism for completion detection - Improves real-time subscription error handling - Provides graceful fallback when real-time updates fail
* da60175 🔧 Add Document Status API Endpoint - Fixes 406 RLS Polling Errors - Creates /documents/{id}/status endpoint for frontend polling - Bypasses Supabase RLS restrictions with server-side auth - Enables reliable progress tracking without direct table access
* 6f6d78a 📋 Add Frontend Fix Verification Guide - Complete testing instructions for 20% hanging fix - Verification checklist and success criteria - Technical details of dual progress tracking system
* 5397168 🔧 Fix Frontend Hanging at 20% - Add Polling Fallback for Real-time Progress - Resolves RLS subscription issues with robust polling mechanism - Handles authentication and permission edge cases - Provides immediate status updates every 2 seconds - Bulletproof progress tracking regardless of real-time connectivity
* 6ad0595 🧪 Add Comprehensive Testing & Deployment Documentation - Complete cloud testing suite with monitoring tools and deployment success summary
* 402eee4 🚀 Phase 1: Implement Webhook + Job Queue Architecture - Eliminates frontend hanging at 20% issue with bulletproof reliability, automatic retries, and zero infrastructure dependencies
* 484c761 🚀 MAJOR FIX: Enhanced vector-processor with comprehensive error handling and graceful degradation - Resolves OpenAI quota exceeded issue with zero vector placeholders - Documents process successfully even when embeddings fail - Enhanced error classification and detailed logging - Text search available when semantic search unavailable
* c7f97fd Update deployment workflow: rename development to staging and update render.yaml to deploy from staging branch
* e6b702b Fix link-assigner function by removing problematic enhanced logging - Reverted complex header and body logging that was breaking function execution - Simplified to basic request body length logging - Function now properly receives documentId and storagePath parameters - Root cause confirmed: issue is with doc-parser, not link-assigner parameter parsing
* 7064ced Fix vector-processor 400 error by removing non-existent Supabase embeddings fallback - Replace with graceful error handling for OpenAI quota exceeded - This fixes the 400 error preventing document processing pipeline completion
* ce6aab8 CRITICAL FIX: Update to LlamaCloud API + Supabase embeddings fallback for robust MVP
* cd8e81c BEST PRACTICE: Add graceful fallback error handling to doc-parser for robust MVP
* bd08e7d MVP: Fix doc-parser with fallback text extraction and comprehensive logging for missing LLAMAPARSE_API_KEY
* 972146c MVP: Fix link-assigner JSON parsing error with comprehensive logging and validation
* 18d9d7a MVP: Fix link-assigner with CORS headers and enhanced logging for serverless pipeline
* 3353205 MVP: Use service role for Edge Function to bypass RLS during testing phase
* 712c7cc SECURITY: Disable JWT verification for doc-processor (MVP ONLY) - Add comprehensive TODO for security workflow - Temporarily allow public access for serverless testing - MUST re-enable verify_jwt=true before production
* 2f29d59 Relax token validation in doc-processor Edge Function - Remove strict 10-character minimum length requirement - Add debug logging for token validation - Allow any non-empty Bearer token for MVP testing
* 6830a9a Fix token storage key mismatch - Change from authToken to token to match login process
* a431f75 Implement service authentication for serverless document processing - Add TODO comments for future security upgrades
* a2b647f Switch frontend to serverless document processing - Replace DocumentUpload with DocumentUploadServerless - Add test files for verification
* b87aa2e feat: Complete serverless migration - replace Render backend with direct OpenAI API calls. Vector-processor now calls OpenAI directly. True serverless: Frontend → Edge Functions → OpenAI → Supabase Storage
* e07dcca feat: Complete serverless migration with Edge Functions - Deploy 4 Supabase Edge Functions, add DocumentUploadServerless component, create automated deployment scripts, add comprehensive migration guide - Ready for Vercel frontend + Supabase Edge Functions deployment
* 873af32 Enable real PDF processing - Step 1 of incremental implementation: Re-enable PyPDF2 dependency in requirements.txt, Restore PyPDF2 import in main.py, Replace mock PDF processing with real text extraction, Add fallback to mock content if PDF processing fails, Expected result: 2.5MB PDF will now create multiple chunks instead of 1 mock chunk
* d2bf9fe Fix foreign key constraint violation - encryption key lookup: Replace dummy encryption key UUID with dynamic database lookup, Query for active encryption key from encryption_keys table, Add comprehensive error handling for missing encryption keys, Expected result: 100% upload success rate instead of 0% foreign key violations
* b4f5915 Fix vector dimension mismatch - solve 0% success rate: Updated all MockModel instances from 384D to 1536D vectors to match database schema, Added comprehensive dimension validation with detailed error logging, Added enhanced analytics logging for embedding generation process, Fixed edge functions API to expect 1536D instead of 384D vectors, Expected result: 100% upload success rate instead of 0%
* 0f78398 Fix database schema mismatch for document uploads
* e6fb9f8 Fix document upload issues - complete LlamaCloud migration fix: Fixed SentenceTransformer undefined variable errors by using mock models, Fixed PyPDF2 undefined variable by implementing mock PDF extraction, Fixed .tolist() method errors by returning numpy arrays from mock models, Text files now work with mock embeddings, PDF files now work with mock content extraction, Both upload types should complete successfully with meaningful responses, Ready for full LlamaCloud integration in next phase
* 3b95eae Fix sentence_transformers import error - temporary rollback: Added sentence-transformers back to requirements.txt temporarily, Multiple services still import sentence_transformers beyond main.py, Fixed encryption_aware_embedding_service import error, Deployment should now succeed, Next phase: Complete LlamaCloud migration across all services
* b7aa391 Fix package name: llamaindex -> llama-index - llamaindex package does not exist on PyPI - Correct package name is llama-index (with hyphen) - This was causing pip install failure during Docker build
* 9e701b4 Fix requirements.txt syntax error - Separate ruff and llamaindex packages that were merged on same line - This was causing Docker build failure on Render
* 115495b Migrate to LlamaCloud architecture - Remove heavy dependencies (sentence-transformers, PyPDF2) - Update requirements.txt to use llama-cloud instead of local processing - Add environment configuration for LLAMACLOUD_API_KEY and OPENAI_API_KEY - Reduce memory footprint from 512MB+ to <100MB - Enable external document processing via LlamaCloud servers
* 179501e Fix CORS for latest Vercel URL and optimize memory usage - Add insurance-navigator-kkedlaqxo URL to CORS allowlist - Implement memory monitoring and optimization for ML model loading - Add psutil for memory tracking - Use lighter mock model when memory is low (<300MB)
* 32a0da8 Enhanced CORS configuration for dynamic Vercel preview URLs - Add latest problematic URL and improved regex patterns - Add development mode for more permissive Vercel handling
* e4f8a8a Fix CORS configuration for Vercel preview deployments - Update patterns and add problematic URL to allowed origins
* 7930f52 feat: implement centralized CORS configuration system - Add utils/cors_config.py with Supabase-inspired centralized CORS management - Update main.py to use centralized CORS configuration - Add comprehensive CORS examples and documentation - Implement environment-driven CORS origin configuration - Add automated CORS testing suite - Support dynamic Vercel preview URL patterns - Maintain backward compatibility with existing CORS middleware - Resolves CORS issues for document upload and improves configuration management
* dec0e53 ♻️ Refactor CORS to use environment variables - Move CORS origins from hardcoded to .env for easier management - Add CORS_ALLOWED_ORIGINS and CORS_VERCEL_PREVIEW_PATTERN - Update documentation with CORS management guide - Not for security (CORS URLs aren't sensitive) but for config flexibility
* b7bd04f 🔧 Fix document upload issues: - Add specific Vercel CORS URL - Reduce text/chunk limits for stability - Improve resource management for large docs
* 44931db 📋 Add cursor rules for proper environment variable checking protocol
* 2d03390 📝 Update env templates and deployment docs - Merge mvp-integration updates
* 37520e8 🔧 Fix f-string syntax error in main.py - Fixed unmatched quotes in image text extraction - Resolves backend deployment failure on Render
* f9add13 (upstream/development, upstream/buildout/streamflow-v2-pipeline, origin/buildout/streamflow-v2-pipeline, buildout/streamflow-v2-pipeline) Documentation & Support: Complete project documentation, deployment guides, testing checklists, database fixes, and comprehensive progress tracking for all 7 phases
* 3c36d98 Phase 7: Advanced Features - Complete multi-modal image processing, advanced workflows, conversation memory, policy caching, image chat endpoint, and comprehensive testing with 100% pass rate
* 3395d9f Phase 6: Modular RAG Integration - Implemented dependency injection RAG architecture with context retrieval, query enhancement, document-aware conversations, and 100% integration with PatientNavigatorAgent
* 136c5d3 Phase 5: Vector Processing Pipeline - Complete document upload, text extraction, chunking, vector embedding generation, and database storage with 92.9% test success rate and robust error handling
* 760d7a6 Phase 3-4: Edge Functions and LlamaParse Integration - Complete Supabase edge functions for document processing, LlamaParse integration, comprehensive testing suite, and issue resolution with 85%+ success rate
* 710384c Phase 1-2: Foundation Database Architecture - Complete V2 database schema with pgvector support, user document vectors, processing progress tracking, and scalable insurance document processing foundation
* a8af217 FIXED: True Migration Consolidation - Single V1.0.0 Fresh Deployment - Complete 976-line consolidated migration, moved 15+ legacy files to archive, comprehensive schema with V2 features, fresh deployment ready
* 18eab8f Phase 1 Complete: Infrastructure Audit & V1.0.0 Migration - Comprehensive infrastructure audit, consolidated V1.0.0 migration, database analysis (17 tables, 31 RLS policies), vector storage assessment, feature flag system, processing status tracking, monitoring views, helper functions
* b5da7ef Add CORS monitoring, build logs, upload resilience docs and test results
* 19fec88 Added comprehensive CORS monitoring and documentation system - Automated CORS monitoring with real-time testing - Security alert system for unauthorized deployments - Performance monitoring and alerting - Comprehensive troubleshooting guide - Pattern management and validation tools - Future prediction and prevention strategies
* 9ad69c1 Enhanced CORS handling and upload resilience - Custom CORS middleware with comprehensive error handling - Pattern-based origin validation with security checks - Enhanced upload endpoint with timeouts, batching, and resilience - Comprehensive CORS testing system with future prediction - Fixed 502 error prevention during large document processing - Added monitoring and alerting for CORS issues
* 6d45006 (upstream/buildout/uploader-implementation, origin/buildout/uploader-implementation, buildout/uploader-implementation) Comprehensive CORS solution and progress tracking improvements - Add pattern-based CORS validation for all Vercel deployment URLs - Support regex patterns for future Vercel preview deployments - Strict validation for andrew-quintanas-projects.vercel.app domain - Enhanced backend logging with milestone-based progress tracking - Improved frontend progress simulation with realistic stages - Comprehensive test suite for CORS validation patterns - Addresses visual observation feedback on progress visibility
* 422205e Fix: Resolve CORS issues and improve upload UX - Add missing Vercel URL to CORS whitelist - Enhanced backend logging during embedding process - Improved frontend error handling with specific CORS guidance - Better upload progress simulation and user feedback - Added comprehensive CORS testing script for debugging
* e9f3c7b Fix: CORS and UI improvements per user feedback - Add new Vercel URL to CORS whitelist to fix upload error - Remove sidebar per user request - Clean up imports and restore user info display
*   d5db2c8 Merge buildout/uploader-implementation: Fix dialog.tsx module resolution issue
|\  
| * c22c3a5 Fix: Use inline cn function in dialog.tsx to avoid module resolution issues - Replace import from lib/utils with inline cn function - Follows same pattern as button.tsx and card.tsx - Resolves Vercel build error per shadcn-ui/ui#3705
* | b1ccdbe Fix: Use inline cn function in dialog.tsx to avoid module resolution issues - Replace import from lib/utils with inline cn function - Follows same pattern as button.tsx and card.tsx - Resolves Vercel build error
|/  
* 20f3f7f Clean up build logs and prepare for development branch creation
* d8b1ee8 🚀 Feature: Complete Document Upload System Implementation - Add DocumentUpload component with drag-and-drop, progress tracking, and validation - Add DocumentUploadModal for seamless chat integration - Add DocumentManager for searching uploaded documents - Add Dialog component for modal functionality - Integrate sidebar with document tools into chat interface - Connect to backend upload-policy and search-documents endpoints - Full RAG (Retrieval-Augmented Generation) document workflow ready
* 5d9d4e8 📊 Add build logs and deployment history - Document successful MVP integration milestone - Track authentication, chat, and agent workflow fixes - Preserve deployment timeline for buildout/mvp-integration
* 43ac013 🔧 Fix: Critical chat errors - backend API key & frontend response handling - Add missing ANTHROPIC_API_KEY configuration - Fix response field mismatch (text vs response) - Add null safety to renderMessage function - Resolves both TypeError issues in backend and frontend
* 88b9e68 🔧 Fix: Chat page authentication hanging on loading - Add missing setIsCheckingAuth(false) calls in all auth check paths - Resolves perpetual 'Verifying session...' spinner issue - Authentication now properly transitions to chat interface
* 40053a4 chore: Cache-buster for JWT authentication fix deployment
* 9124b8d fix: Use validate_session for JWT token verification - Fix 401 error on /me endpoint by using validate_session method - This method returns complete user data from database instead of incomplete JWT payload - Resolves data mismatch between JWT fields and UserResponse model - Also fixes health check asyncio.wait_for syntax error
* 4145872 chore: Cache-buster for DB connection resilience deployment
* e74a96c fix: Improve database connection resilience and health check caching - Add health check result caching (30s) to reduce DB pressure - Add connection retry logic for dropped connections - Add timeout handling for DB operations - Improve error handling for connection interruptions - This should resolve 'connection was closed in the middle of operation' errors
* b15a691 chore: Update cache-buster for CORS/endpoint fixes deployment
* 13cc472 fix: Add missing /forgot-password endpoint and improve CORS handling - Add ForgotPasswordRequest model and /forgot-password endpoint - Add explicit OPTIONS handler for CORS preflight requests - Update CORS middleware with more permissive settings - Add specific Vercel preview deployment URL to allowed origins - Fix authentication token verification method call - This should resolve the 400 Bad Request preflight errors
* 5dabb74 Force Render cache rebuild: Add cache-busting comment - Render was using cached layer with old --no-cache-dir - This will force fresh build with optimized pip cache mount
* 6fed5ee Fix API endpoint paths and optimize Render builds - Align frontend paths with backend (/login, /register, /me, /chat vs /api/v1/*) - Remove --no-cache-dir and add pip cache mount for faster Render builds - Should resolve 502 errors and speed up deployments
* 16f98a6 Complete API client inlining: Fix all remaining import issues - Inline API calls in chat, forgot-password, page, welcome components - Use process.env.NEXT_PUBLIC_API_BASE_URL consistently across all pages - Remove all @/lib/api-client and relative import dependencies - Build now compiles successfully: ✓ Compiled successfully in 1000ms - Ready for production deployment with proper environment variable access
* 74e3e62 Fix Vercel build: Inline API client and use direct env vars - Remove problematic @/lib/api-client imports - Use process.env.NEXT_PUBLIC_API_BASE_URL directly (Vercel best practice) - Add debug logging for env values - Builds successfully locally
* 3cd0b4a Fix Vercel build: Replace @/lib/api-client imports with relative paths - Convert all @/lib/api-client imports to relative imports (../../lib/api-client) - This resolves module resolution issues in Vercel build environment - Compilation now succeeds locally - All hardcoded localhost URLs remain fixed with proper API client usage
* bf04057 Fix hardcoded localhost URLs to use API client - Replace all http://localhost:8000 URLs with proper API client usage in login, register, forgot-password, chat, welcome, and home pages - This should resolve production deployment issue where frontend was connecting to localhost instead of production API
* 91453e1 debug: add comprehensive environment variable logging for diagnosis
* b5fa4c1 force: trigger clean build without cache for environment variables
* 336695c debug: add console logging to troubleshoot API URL in production
* 9296cd0 docs: update README to trigger redeploy with env vars
* c4cd031 fix: inline cn utility function to eliminate all import dependencies
* d1c1210 fix: use relative imports to resolve module resolution issue in Vercel build
* 336f867 fix: add webpack alias configuration for @ path mapping
* e46d7ef fix: temporarily remove postinstall script to debug Vercel build
* 12b3729 chore: Update package-lock.json
* f2cf248 feat: Add Vercel deployment configuration and production optimizations
* f90fdf8 Organize documentation: Move root .md files to docs/ subdirectories - README.md → docs/project/ (main project documentation) - DEPLOYMENT_STATUS.md → docs/deployment/ (current status) - DEPLOYMENT_SUMMARY.md → docs/deployment/ (summary guide) - deploy-guide.md → docs/deployment/ (complete guide) - AGENT_REORGANIZATION_SUMMARY.md → docs/agents/ (structure changes) - Created docs/README.md comprehensive documentation index - Organized by category with navigation by topic and user type - Cleaner root directory with logical categorization
* 068950d Add deployment verification endpoint - Shows prepared statement fix status and commit info - Helps verify render.com deployment received latest fixes - Displays ASYNCPG_DISABLE_PREPARED_STATEMENTS setting - Shows if DATABASE_URL uses pooler.supabase.com - Enables quick verification of deployment status via root endpoint
* 5eaaf6c Complete fix: Eliminate render.com prepared statement errors - PROBLEM: Every 5 seconds in render.com production: 'prepared statement does not exist' - ROOT CAUSE: Health checks + SQLAlchemy + Supabase transaction pooler incompatibility - SOLUTION: Added DEALLOCATE ALL event handlers + transaction pooler detection + health check fixes - VERIFICATION: All tests pass, no prepared statement errors, ready for deployment
* b2867f8 Fix: Resolve Supabase transaction pooler prepared statement conflicts - Update db_pool.py to respect ASYNCPG_DISABLE_PREPARED_STATEMENTS environment variable - Set statement_cache_size=0 when prepared statements disabled - Apply same configuration to SQLAlchemy engine - Add logging to show prepared statement status - Enhanced deployment simulation testing for pooler compatibility - Resolves render.com production deployment errors - Fixes: 'prepared statement does not exist' errors in production
* f51c8a6 ADD: Deployment simulation test script - Simulates render.com deployment conditions locally - Tests clean imports, environment vars, database connection, app startup - Catches render.com-style issues that local tests miss - Clears Python caches to mimic production deployment - 71.4% success rate with expected database/endpoint failures - Prevents deployment failures by catching import issues early
* 4a42632 CRITICAL FIX: Resolve AgentOrchestrator import failures - Fix security_models import path from models.security_models to security_models - Remove duplicate/broken imports in agents/__init__.py - Remove non-existent exception imports - Fix model class names (TaskProcessingResult, ServiceAccessStrategy) - Update config.yaml prompt_security path to actual file location - All agents now import and initialize successfully (100% test pass rate) - Ready for production deployment
* 159dbdd updating prompt security config
* 4415f89 Complete agent system fixes and testing: 100% test pass rate - Fix all broken import paths after agent reorganization - Create missing PatientNavigatorAgent prompt file - Fix PromptSecurityAgent and PatientNavigatorAgent prompt paths - Clean up config.yaml with actual version numbers - Add comprehensive test suite - All agents now initialize and work correctly - Ready for production deployment
* 210d233 RCA and fix: Resolve AgentOrchestrator import failure by fixing broken import paths - Root cause: Agent reorganization broke import paths for model files - Fixed 11 files with incorrect import paths - AgentOrchestrator import now works properly and will error clearly if it fails
* d80945c Fix AgentOrchestrator import error: handle import failure gracefully with fallback type annotation
* 7a2dcc4 Fix AgentOrchestrator import error with placeholder class for type annotations
* e67daeb Major agent reorganization: flatten agent structure, fix imports, and update AsyncPG configuration
* 466b023 Fix database prepared statement error with ASYNCPG_DISABLE_PREPARED_STATEMENTS=1
* 7b7940e Fix: Prevent agent-specific directories from being created in project root - Removed code in BaseAgent.__init__ that created agent-specific directories like ./patient_navigator/logs/ - Updated logging setup to use centralized logs/ directory instead - Fixed save_metrics method to use centralized metrics/{agent_name}/ structure - Agents now properly use the centralized logs/ directory as intended - Prevents unwanted directories like {agent_name}/logs from cluttering project root
* 2381744 Update config.yaml to use wildcard patterns for version-agnostic file references - Replace current_* files with {file}_{agent_name}_v***** pattern - Update all agent prompts and examples to use v***** wildcard - Fix chat_communicator core file path after reorganization - Add regulatory agent to config with proper file paths - Maintain human-readable, static config without regeneration needs
* 8a5c9a7 Add Render API URL to CORS origins for external access
* cbbfa26 Fix port detection: add explicit PORT=8000 env var for Render
* 58ebe72 Fix deployment: correct branch name, add explicit port 8000, use existing JWT secret
* 324b604 Add FREE TIER deployment configuration - Dockerfile, render.yaml, guides, and scripts for /bin/zsh/month deployment
* 228f76f chore: organize project structure and cleanup temp files - move test files to tests/ directories, move docs to docs/ subdirectories, move utility scripts to scripts/, clean up temporary files and prepare clean baseline for backend refactoring
* ff89236 fix: Resolve service strategy agent parameter issue - Add proper parameter mapping for develop_strategy method - Fix regulatory check dictionary access - System now successfully initializes all agents and workflows
* 99d9dfb fix: Complete LangGraph workflow and ChatCommunicator fixes - Fix ChatCommunicatorAgent initialization order and LangGraph workflow structure - Add missing config and simplify chat response generation
* a477ed4 fix: Correct agent initialization in orchestrator - Only pass config_manager to agents that support it in their constructor - PromptSecurityAgent and RegulatoryAgent don't accept config_manager - PatientNavigatorAgent, TaskRequirementsAgent, ServiceAccessStrategyAgent, and ChatCommunicatorAgent do accept config_manager
* 8aaef77 fix: Add missing output_parser initialization to ChatCommunicatorAgent - Initialize PydanticOutputParser for ChatResponse in __init__ method - This resolves the 'output_parser' attribute error in agent orchestrator - Required for proper LangChain processing chain functionality
* 555aaae fix: Update configuration to use config.yaml and resolve missing files - Change config_manager to load from config.yaml instead of config/agent_config.json - Add YAML support to configuration loader - Create missing JSON examples file for patient_navigator agent - This resolves prompt file not found errors in chat functionality
* 102de95 fix: Resolve chat agent initialization and UI issues - Fix patient navigator prompt file path in fallback configuration - Remove workflow debug information from chat UI - These fixes should resolve chat functionality
* ca5c97e fix: Eliminate authentication flash on page load - Add loading state to prevent navigation buttons flash - Show loading placeholders instead of default unauthenticated state - Disable hero button during auth check - Improve perceived performance and UX consistency
* ec082c5 fix: Update navigation to show user info when authenticated - Add proper user greeting with name/email in navigation - Replace Sign In/Get Started with Chat button and Sign Out when authenticated - Add TypeScript interface for user data - Improve UX by clearly showing authentication state
* 5cf8508 fix: Authentication and token expiration improvements - Fix JWT token_type capitalization (Bearer vs bearer) - Remove server status disclosure from login page - Fix registration field name mismatch (name -> full_name) - Update JWT token expiration to 24 hours (daily signin)
* d7d59e3 feat: Add database backup infrastructure - Add backup directory structure for database snapshots - Ensure backup capabilities for production rollback scenarios
* 4523c67 feat: Integrate encryption-aware services and update application - Update FastAPI main.py with new service integrations - Enhance storage service with encryption support - Update agent configurations for vector RAG - Add comprehensive integration testing framework
* 15f6a36 feat: Implement vector-first architecture migration - Consolidate policy_documents and policy_records into unified vector schema - Add encryption-aware embedding service with 384-dim vector support - Implement unified RAG interface for agent integration - Add comprehensive migration scripts with rollback support
* 688b3e2 feat: Implement comprehensive RLS and function security - Add Row Level Security policies for all tables - Fix critical security vulnerabilities in database functions - Implement secure user context isolation - Add comprehensive security audit and testing scripts
* 0b27261 Complete Task 4: Supabase Storage Integration - Full storage service with upload/download, signed URLs, role-based permissions, metadata storage, soft/hard delete, multi-file type support, comprehensive testing (100% passing), and production-ready security features
* b47cfd3 chore: add remaining agent improvements and testing infrastructure
* d4eb642 feat: implement Next.js frontend with authentication, chat interface, and user management
* 118e670 feat: add FastAPI backend with authentication and testing infrastructure
* 0eacd6b fix: resolve agent import consistency and dependency conflicts
* 3c10d4c feat: integrate security config with authentication system and update environment template
* a8e859c feat: implement enhanced security configuration system with environment variable priority
* 8c2f9af fix: Clean up .gitignore formatting and ensure .venv/ is properly excluded
* f5a2a59 (upstream/buildout/agent-modules, origin/buildout/agent-modules, buildout/agent-modules) feat: Add Chat Communicator Agent with Claude API integration
* 8b23ccf docs: Add final regulatory agent implementation status and integration guide
* b5d1124 docs: Remove obsolete RCA document in favor of structured troubleshooting guide
* 393ac9f feat: Complete regulatory agent implementation with dual-agent architecture - Add consolidated regulatory agent with mock and isolated variants - Implement internet search with DuckDuckGo integration - Add PostgreSQL caching and Supabase document storage - Create comprehensive testing framework with 3 test suites - Add database migrations for regulatory search enhancements - Include troubleshooting documentation and integration examples - Resolve dependency conflicts through import bypass strategy - Support both zero-dependency testing and production deployment
* 9dd8cd7 (upstream/buildout/database, origin/buildout/database, buildout/database) feat(db): add regulatory documents table and regulatory agent role
*   1d9b933 Merge comprehensive database infrastructure and access logging refactor
|\  
| * a2a39e5 feat(db): comprehensive database infrastructure, migrations, and access logging refactor
| * 2bc0add feat(db): refactor access logging for Postgres, add real DB integration test for get_access_history
| * 33bdc07 feat(database): Implement core database infrastructure and services - Add migration scripts, encryption, storage, access control, and audit services with test infrastructure
| * 5db8b9d feat: Implement comprehensive access logging - Add AccessLoggingService for audit trail management - Integrate logging with PolicyOperations - Add comprehensive test coverage - Update documentation with access logging details - Support HIPAA compliance requirements - Add access pattern analysis capabilities
| * d42faaa feat(middleware): Add error handling middleware with tests
| * 530f9d9 feat(db): Add database connection pool with tests
| * 68f246a feat(policy): Add PolicyOperations service with tests
| * 823a3ff feat(access): Implement PolicyAccessEvaluator core functionality
| * 27d47a5 test(access): Add PolicyAccessEvaluator test suite
| * 504fa74 feat(access): Add PolicyAccessEvaluator class scaffold
| * 16b95b1 feat(encryption): Add encryption service and key manager implementation
| * 91d54ae feat(encryption): Add encryption service and update key manager
| * 513fbb2 feat(db): Initial database infrastructure setup - Add schema migrations, StorageService, and tests
|/  
* 91685e1 (upstream/refactor/standardize-architecture, origin/refactor/standardize-architecture, refactor/standardize-architecture) refactored agent files and folders for greater leverage of abstraction and polymorphism
* 1bc7169 pre-testing refactoring
* e392ad3 refactor: update PromptSecurityAgent to use standardized patterns
* 66a9195 refactor: implement standardized base agent, error handling, testing utils, and config management
* 6d34623 initial refactoring
* a01afc7 Complete service access strategy agent implementation with agent_config integration
* 7e8944f Add metrics tracking for patient_navigator agent
* cc6efff Refactor: Standardize agent model configuration and abstraction
* bac4a24 Add agent configuration management system
* f398590 Add generic performance metrics framework for agent testing
* b10488c Update prompt security agent to load examples from JSON and integrate them into prompts
*   ab0b381 Merge main into buildout/agent-modules, keeping ReAct implementation
|\  
| * a720969 (upstream/temp_branch, origin/temp_branch, temp_branch) docs: Standardize formatting in task_requirements examples
| * 7ad9a46 refactor: Rename service_context to service_intent and update prompt to V1.1
| * ebefb01 feat: Update task_requirements agent to process patient_navigator output
| *   3441132 Merge agent module restructuring with proprietary license
| |\  
* | | de8e4cd feat: Implement ReAct-based task requirements agent with patient navigator integration
| |/  
|/|   
* | ed3d268 Add proprietary license for private repository
* | a33fb5d refactor: Update logging to use agent-specific logs directories
* | 46b6bf1 Complete agent structure refactoring and standardization
* | 49912e5 docs: update README with new repository structure
* | bd7dc88 Refactor agent structure and logging configuration
* | 3e7cf95 Improve test environment and LangSmith integration
* | 3144aef chore: clean up branch structure
* | c336f55 refactor: restructure agent architecture - Rename and consolidate agents - Remove unused agents - Add new HIPAA communication guard agent - Update document management to document manager
* | 79e772f Fix and enable tests for agents after restructuring
* | fe17730 Implement LangSmith versioning and self-consistency in prompt security agent
* | 773c227 Implement agent modules with prompt management system and testing framework
* | a8c5745 Implement Prompt Security Agent for detecting harmful content and preventing prompt injection attacks
|/  
* b55ed69 Implement Excel importer for FMEA and design documents, remove Google Sheets importer
* 10fe544 (upstream/buildout/scaffolding-setup, origin/buildout/scaffolding-setup, buildout/scaffolding-setup) fix: rename sheet_importer to sheets to avoid module name conflict and add debug mode
* 349735f feat: add Google Sheets importer for FMEA and design documents
* 5ea274e refactor: replace markdown docs with JSON in fmea and design directories
* 1237620 refactor: move JSON documentation to docs/json directory
* 70ad68e docs: remove Phase 1 summary
* 430ee65 docs: add Phase 1 development summary
* c44c4e0 feat: add Next.js UI with shadcn components
* 267e295 feat: document parser setup, config updates, and test improvements
* 4d070b3 chore: Initial repository setup with README and configuration files
* 9aa997a feat: Implement DocumentParser with LlamaParse integration and comprehensive test suite
* 199d1ef refactor: Update project name to insurance_navigator and broaden scope from Medicare to general insurance
* cf03306 chore: Update project documentation and structure
* db14d4a feat: Add encryption-related security checks
* 6ea942a feat: Add comprehensive test suite with security checks
* 94605cd refactor: Rename HIPAA Communication Guard Agent to Regulatory Agent
* bb4de5e feat: Add regulatory tools for healthcare compliance and fraud detection
* dc2023b refactor: Remove insurance tools and clean up tool configuration
* 3c2e1a0 refactor: Split tool configuration into separate modules with Supabase integration
* 0760a89 feat: Add centralized tool configuration system
* f3d5f4f feat: Add logging, tests, and complete Phase 1 requirements
* 622d3e5 feat: Add memory, human-in-the-loop, and time travel capabilities to base agent
* 212fff0 feat: Update base agent to use Claude and add tool calling support
* a493e69 feat: Simplified base agent implementation following LangGraph tutorial
* 2691e54 Initial commit: Basic project structure and configuration
