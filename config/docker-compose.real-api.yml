
# Real API Integration Environment
# This configuration replaces mock services with real LlamaParse and OpenAI APIs
# for Phase 2 testing and validation

services:
  postgres:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_DB: accessa_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/integration_schema_setup.sql:/docker-entrypoint-initdb.d/01_integration_schema.sql
      - ./sql/rls_policies.sql:/docker-entrypoint-initdb.d/02_rls_policies.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api-server:
    build:
      context: .
      dockerfile: config/docker/Dockerfile
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/accessa_dev
      LLAMAPARSE_API_URL: https://api.llamaindex.ai
      LLAMAPARSE_API_KEY: ${LLAMAPARSE_API_KEY}
      OPENAI_API_URL: https://api.openai.com/v1
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      STORAGE_TYPE: local
      LOCAL_STORAGE_PATH: /app/storage
      ENVIRONMENT: real_api_testing
    volumes:
      - ./mock_storage:/app/storage
      - ./mock_storage:/app/mock_storage
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  enhanced-base-worker:
    build:
      context: .
      dockerfile: config/docker/Dockerfile
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/accessa_dev
      LLAMAPARSE_API_URL: https://api.llamaindex.ai
      LLAMAPARSE_API_KEY: ${LLAMAPARSE_API_KEY}
      OPENAI_API_URL: https://api.openai.com/v1
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      SUPABASE_SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY}
      STORAGE_TYPE: local
      LOCAL_STORAGE_PATH: /app/storage
      ENVIRONMENT: real_api_testing
    volumes:
      - ./mock_storage:/app/storage
      - ./mock_storage:/app/mock_storage
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3

# Mock services removed for real API integration
# Local storage service removed for real API integration

  monitoring:
    build:
      context: ./monitoring
      dockerfile: Dockerfile
    ports:
      - "8004:3000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/accessa_dev
      ENVIRONMENT: real_api_testing
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  agent-api:
    build:
      context: .
      dockerfile: Dockerfile.agent-api
    ports:
      - "8003:8003"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/accessa_dev
      OPENAI_API_URL: https://api.openai.com/v1
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      UPLOAD_PIPELINE_SCHEMA: upload_pipeline
      AGENT_ENVIRONMENT: real_api_testing
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
