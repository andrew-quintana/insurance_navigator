{
  "timestamp": "2025-09-23T15:19:20.529793",
  "environment": "development",
  "tests": {
    "core_database": {
      "returncode": 2,
      "stdout": "============================= test session starts ==============================\nplatform darwin -- Python 3.9.12, pytest-8.3.5, pluggy-1.5.0 -- /Users/aq_home/opt/anaconda3/bin/python\ncachedir: .pytest_cache\nrootdir: /Users/aq_home/1Projects/accessa/insurance_navigator/tests\nconfigfile: pytest.ini\nplugins: anyio-3.7.1, asyncio-0.26.0, mock-3.14.0, cov-6.1.1\nasyncio: mode=auto, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollecting ... collected 0 items / 1 error\n\n==================================== ERRORS ====================================\n_________________ ERROR collecting unit/core/test_database.py __________________\nImportError while importing test module '/Users/aq_home/1Projects/accessa/insurance_navigator/tests/unit/core/test_database.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n../../../opt/anaconda3/lib/python3.9/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../../opt/anaconda3/lib/python3.9/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n../../../opt/anaconda3/lib/python3.9/importlib/__init__.py:127: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1030: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1007: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:986: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:680: in _load_unlocked\n    ???\n../../../opt/anaconda3/lib/python3.9/site-packages/_pytest/assertion/rewrite.py:185: in exec_module\n    exec(co, module.__dict__)\ntests/unit/core/test_database.py:19: in <module>\n    from core.database import (\nE   ModuleNotFoundError: No module named 'core.database'\n- generated xml file: /Users/aq_home/1Projects/accessa/insurance_navigator/test-results/core_database_results.xml -\n================================ tests coverage ================================\n_______________ coverage: platform darwin, python 3.9.12-final-0 _______________\n\nName                                      Stmts   Miss  Cover   Missing\n-----------------------------------------------------------------------\ncore/__init__.py                            128    128     0%   16-249\ncore/agent_integration.py                   105    105     0%   16-234\ncore/database.py                            136    136     0%   16-274\ncore/resilience/__init__.py                   4      4     0%   13-60\ncore/resilience/circuit_breaker.py          197    197     0%   8-358\ncore/resilience/graceful_degradation.py     193    193     0%   8-428\ncore/resilience/monitoring.py               289    289     0%   8-554\ncore/service_manager.py                     216    216     0%   9-431\n-----------------------------------------------------------------------\nTOTAL                                      1268   1268     0%\nCoverage JSON written to file coverage.json\n=========================== short test summary info ============================\nERROR tests/unit/core/test_database.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.44s ===============================\n",
      "stderr": "/Users/aq_home/opt/anaconda3/lib/python3.9/site-packages/pytest_asyncio/plugin.py:217: PytestDeprecationWarning: The configuration option \"asyncio_default_fixture_loop_scope\" is unset.\nThe event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: \"function\", \"class\", \"module\", \"package\", \"session\"\n\n  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))\n/Users/aq_home/opt/anaconda3/lib/python3.9/site-packages/coverage/control.py:915: CoverageWarning: No data was collected. (no-data-collected)\n  self._warn(\"No data was collected.\", slug=\"no-data-collected\")\n",
      "duration": "N/A"
    },
    "core_service_manager": {
      "returncode": 2,
      "stdout": "============================= test session starts ==============================\nplatform darwin -- Python 3.9.12, pytest-8.3.5, pluggy-1.5.0 -- /Users/aq_home/opt/anaconda3/bin/python\ncachedir: .pytest_cache\nrootdir: /Users/aq_home/1Projects/accessa/insurance_navigator/tests\nconfigfile: pytest.ini\nplugins: anyio-3.7.1, asyncio-0.26.0, mock-3.14.0, cov-6.1.1\nasyncio: mode=auto, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollecting ... collected 0 items / 1 error\n\n==================================== ERRORS ====================================\n______________ ERROR collecting unit/core/test_service_manager.py ______________\nImportError while importing test module '/Users/aq_home/1Projects/accessa/insurance_navigator/tests/unit/core/test_service_manager.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n../../../opt/anaconda3/lib/python3.9/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../../opt/anaconda3/lib/python3.9/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n../../../opt/anaconda3/lib/python3.9/importlib/__init__.py:127: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1030: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1007: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:986: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:680: in _load_unlocked\n    ???\n../../../opt/anaconda3/lib/python3.9/site-packages/_pytest/assertion/rewrite.py:185: in exec_module\n    exec(co, module.__dict__)\ntests/unit/core/test_service_manager.py:17: in <module>\n    from core.service_manager import (\nE   ModuleNotFoundError: No module named 'core.service_manager'\n- generated xml file: /Users/aq_home/1Projects/accessa/insurance_navigator/test-results/core_service_manager_results.xml -\n================================ tests coverage ================================\n_______________ coverage: platform darwin, python 3.9.12-final-0 _______________\n\nName                                      Stmts   Miss  Cover   Missing\n-----------------------------------------------------------------------\ncore/__init__.py                            128    128     0%   16-249\ncore/agent_integration.py                   105    105     0%   16-234\ncore/database.py                            136    136     0%   16-274\ncore/resilience/__init__.py                   4      4     0%   13-60\ncore/resilience/circuit_breaker.py          197    197     0%   8-358\ncore/resilience/graceful_degradation.py     193    193     0%   8-428\ncore/resilience/monitoring.py               289    289     0%   8-554\ncore/service_manager.py                     216    216     0%   9-431\n-----------------------------------------------------------------------\nTOTAL                                      1268   1268     0%\nCoverage JSON written to file coverage.json\n=========================== short test summary info ============================\nERROR tests/unit/core/test_service_manager.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.49s ===============================\n",
      "stderr": "/Users/aq_home/opt/anaconda3/lib/python3.9/site-packages/pytest_asyncio/plugin.py:217: PytestDeprecationWarning: The configuration option \"asyncio_default_fixture_loop_scope\" is unset.\nThe event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: \"function\", \"class\", \"module\", \"package\", \"session\"\n\n  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))\n/Users/aq_home/opt/anaconda3/lib/python3.9/site-packages/coverage/control.py:915: CoverageWarning: No data was collected. (no-data-collected)\n  self._warn(\"No data was collected.\", slug=\"no-data-collected\")\n",
      "duration": "N/A"
    },
    "core_agent_integration": {
      "returncode": 2,
      "stdout": "============================= test session starts ==============================\nplatform darwin -- Python 3.9.12, pytest-8.3.5, pluggy-1.5.0 -- /Users/aq_home/opt/anaconda3/bin/python\ncachedir: .pytest_cache\nrootdir: /Users/aq_home/1Projects/accessa/insurance_navigator/tests\nconfigfile: pytest.ini\nplugins: anyio-3.7.1, asyncio-0.26.0, mock-3.14.0, cov-6.1.1\nasyncio: mode=auto, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollecting ... collected 0 items / 1 error\n\n==================================== ERRORS ====================================\n_____________ ERROR collecting unit/core/test_agent_integration.py _____________\nImportError while importing test module '/Users/aq_home/1Projects/accessa/insurance_navigator/tests/unit/core/test_agent_integration.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n../../../opt/anaconda3/lib/python3.9/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../../opt/anaconda3/lib/python3.9/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n../../../opt/anaconda3/lib/python3.9/importlib/__init__.py:127: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1030: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1007: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:986: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:680: in _load_unlocked\n    ???\n../../../opt/anaconda3/lib/python3.9/site-packages/_pytest/assertion/rewrite.py:185: in exec_module\n    exec(co, module.__dict__)\ntests/unit/core/test_agent_integration.py:18: in <module>\n    from core.agent_integration import (\nE   ModuleNotFoundError: No module named 'core.agent_integration'\n- generated xml file: /Users/aq_home/1Projects/accessa/insurance_navigator/test-results/core_agent_integration_results.xml -\n================================ tests coverage ================================\n_______________ coverage: platform darwin, python 3.9.12-final-0 _______________\n\nName                                      Stmts   Miss  Cover   Missing\n-----------------------------------------------------------------------\ncore/__init__.py                            128    128     0%   16-249\ncore/agent_integration.py                   105    105     0%   16-234\ncore/database.py                            136    136     0%   16-274\ncore/resilience/__init__.py                   4      4     0%   13-60\ncore/resilience/circuit_breaker.py          197    197     0%   8-358\ncore/resilience/graceful_degradation.py     193    193     0%   8-428\ncore/resilience/monitoring.py               289    289     0%   8-554\ncore/service_manager.py                     216    216     0%   9-431\n-----------------------------------------------------------------------\nTOTAL                                      1268   1268     0%\nCoverage JSON written to file coverage.json\n=========================== short test summary info ============================\nERROR tests/unit/core/test_agent_integration.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.46s ===============================\n",
      "stderr": "/Users/aq_home/opt/anaconda3/lib/python3.9/site-packages/pytest_asyncio/plugin.py:217: PytestDeprecationWarning: The configuration option \"asyncio_default_fixture_loop_scope\" is unset.\nThe event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: \"function\", \"class\", \"module\", \"package\", \"session\"\n\n  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))\n/Users/aq_home/opt/anaconda3/lib/python3.9/site-packages/coverage/control.py:915: CoverageWarning: No data was collected. (no-data-collected)\n  self._warn(\"No data was collected.\", slug=\"no-data-collected\")\n",
      "duration": "N/A"
    }
  },
  "coverage": {},
  "summary": {
    "total_tests": 3,
    "passed": 0,
    "failed": 3,
    "success_rate": 0.0
  }
}